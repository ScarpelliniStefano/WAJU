{"remainingRequest":"C:\\Users\\stefa\\Desktop\\VueJS\\jcoui_web\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\stefa\\Desktop\\VueJS\\jcoui_web\\src\\components\\LinedVTextarea.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\stefa\\Desktop\\VueJS\\jcoui_web\\src\\components\\LinedVTextarea.vue","mtime":1635151695411},{"path":"C:\\Users\\stefa\\Desktop\\VueJS\\jcoui_web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1634653953403},{"path":"C:\\Users\\stefa\\Desktop\\VueJS\\jcoui_web\\node_modules\\babel-loader\\lib\\index.js","mtime":1634653954027},{"path":"C:\\Users\\stefa\\Desktop\\VueJS\\jcoui_web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1634653953403},{"path":"C:\\Users\\stefa\\Desktop\\VueJS\\jcoui_web\\node_modules\\vue-loader\\lib\\index.js","mtime":1634653954200}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KDQpleHBvcnQgZGVmYXVsdCB7DQogIG5hbWU6ICdMaW5lZFZUZXh0YXJlYScsDQogIG1vdW50ZWQgKCkgew0KICAgIHRoaXMuY29udGVudCA9IHRoaXMudmFsdWUNCiAgICB0aGlzLnN5bmNTY3JvbGwoKQ0KICAgIHRoaXMuY2FsY3VsYXRlQ2hhcmFjdGVyc1BlckxpbmUoKQ0KICB9LA0KICBkYXRhICgpIHsNCiAgICByZXR1cm4gew0KICAgICAgY29udGVudDogJycsDQogICAgICB3aWR0aFBlckNoYXI6IDgsIC8vIEhhcmQgY29kZWQsIGFqdXN0IHdoZW4gbmVjZXNzYXJ5DQogICAgICBudW1QZXJMaW5lOiAxLA0KICAgICAgcHJldmlvdXNXaWR0aDogMCwNCiAgICAgIHNjcm9sbGVkTGVuZ3RoOiAwDQogICAgfQ0KICB9LA0KICBwcm9wczogew0KICAgIGRpc2FibGVkOiB7DQogICAgICB0eXBlOiBCb29sZWFuLA0KICAgICAgZGVmYXVsdDogZmFsc2UNCiAgICB9LA0KICAgIG5vd3JhcDogew0KICAgICAgdHlwZTogQm9vbGVhbiwNCiAgICAgIGRlZmF1bHQ6IHRydWUNCiAgICB9LA0KICAgIHBsYWNlaG9sZGVyOiB7DQogICAgICB0eXBlOiBTdHJpbmcsDQogICAgICBkZWZhdWx0OiAnJw0KICAgIH0sDQogICAgc3R5bGVzOiB7DQogICAgICB0eXBlOiBPYmplY3QsDQogICAgICBkZWZhdWx0ICgpIHsNCiAgICAgICAgcmV0dXJuIHsNCiAgICAgICAgICBoZWlnaHQ6ICczMDBweCcNCiAgICAgICAgfQ0KICAgICAgfQ0KICAgIH0sDQogICAgdmFsdWU6IHsNCiAgICAgIHR5cGU6IFN0cmluZywNCiAgICAgIGRlZmF1bHQ6ICcnDQogICAgfSwNCiAgICB2YWxpZGF0ZTogew0KICAgICAgdHlwZTogRnVuY3Rpb24sDQogICAgICBkZWZhdWx0OiAoKSA9PiB0cnVlDQogICAgfQ0KICB9LA0KICBjb21wdXRlZDogew0KICAgIGludmFsaWRMaW5lcyAoKSB7DQogICAgICBjb25zdCBsaW5lTnVtYmVycyA9IFtdDQogICAgICB0aGlzLmNvbnRlbnQuc3BsaXQoJ1xuJykuZm9yRWFjaCgobGluZSwgaW5kZXgpID0+IHsNCiAgICAgICAgaWYgKCF0aGlzLnZhbGlkYXRlKGxpbmUpKSBsaW5lTnVtYmVycy5wdXNoKGluZGV4ICsgMSkNCiAgICAgIH0pDQogICAgICByZXR1cm4gbGluZU51bWJlcnMNCiAgICB9LA0KICAgIGxpbmVzICgpIHsNCiAgICAgIGlmICh0aGlzLmNvbnRlbnQgPT09ICcnKSByZXR1cm4gWzFdDQogICAgICBjb25zdCBsaW5lTnVtYmVycyA9IFtdDQogICAgICBsZXQgbnVtID0gMQ0KICAgICAgLy8gTnVtYmVyIG9mIGxpbmVzIGV4dGVuZGVkLiBTZWVtcyB0byB3b3JrIHdpdGggcHJlLXdyYXAgKGhhcyBwcm9ibGVtIHdpdGggZGFzaCkNCiAgICAgIGZ1bmN0aW9uIGdldFdyYXBUaW1lcyAoc2VudGVuY2UsIHdpZHRoKSB7DQogICAgICAgIGlmICh3aWR0aCA8PSAwKSB7DQogICAgICAgICAgLy8gUHJvdGVjdCBhZ2FpbnN0IGluZmluaXRlIGxvb3ANCiAgICAgICAgICBjb25zb2xlLndhcm4oJ1BsZWFzZSBzZXQgdGhlIG1pbi13aWR0aCBvZiB0ZXh0YXJlYSB0byBhbGxvdyBhdCBsZWFzdCBvbmUgY2hhcmFjdGVyIHBlciBsaW5lLicpDQogICAgICAgICAgcmV0dXJuIHNlbnRlbmNlLmxlbmd0aCArIDEgLy8gU2VlbXMgYnJvd3NlciB3b3VsZCBhZGQgb25lIGFkZGl0aW9uYWwgc3BhY2UNCiAgICAgICAgfQ0KICAgICAgICBjb25zdCB3b3JkcyA9IHNlbnRlbmNlLnNwbGl0KCcgJykNCiAgICAgICAgbGV0IGN1cnJlbnRMaW5lID0gMQ0KICAgICAgICBsZXQgc3BhY2VMZWZ0ID0gd2lkdGgNCiAgICAgICAgd29yZHMuZm9yRWFjaCgod29yZCkgPT4gew0KICAgICAgICAgIGxldCBpc1dpZHRoID0gc3BhY2VMZWZ0ID09PSB3aWR0aA0KICAgICAgICAgIC8qIGVzbGludC1kaXNhYmxlIG5vLXVubW9kaWZpZWQtbG9vcC1jb25kaXRpb24gKi8NCiAgICAgICAgICB3aGlsZSAoaXNXaWR0aCAmJiB3b3JkLmxlbmd0aCA+PSBzcGFjZUxlZnQpIHsNCiAgICAgICAgICAgICsrY3VycmVudExpbmUNCiAgICAgICAgICAgIHdvcmQgPSB3b3JkLnNsaWNlKHdpZHRoKQ0KICAgICAgICAgIH0NCiAgICAgICAgICBpZiAoc3BhY2VMZWZ0ID09PSB3aWR0aCkgew0KICAgICAgICAgICAgc3BhY2VMZWZ0IC09IHdvcmQubGVuZ3RoDQogICAgICAgICAgICByZXR1cm4NCiAgICAgICAgICB9DQogICAgICAgICAgaWYgKHdvcmQubGVuZ3RoICsgMSA+IHNwYWNlTGVmdCkgew0KICAgICAgICAgICAgKytjdXJyZW50TGluZQ0KICAgICAgICAgICAgc3BhY2VMZWZ0ID0gd2lkdGgNCiAgICAgICAgICB9DQogICAgICAgICAgc3BhY2VMZWZ0IC09IGlzV2lkdGggPyB3b3JkLmxlbmd0aCA6IHdvcmQubGVuZ3RoICsgMQ0KICAgICAgICB9KQ0KICAgICAgICByZXR1cm4gKHNwYWNlTGVmdCA9PT0gd2lkdGgpID8gY3VycmVudExpbmUgLSAxIDogY3VycmVudExpbmUNCiAgICAgIH0NCiAgICAgIHRoaXMuY29udGVudC5zcGxpdCgnXG4nKS5mb3JFYWNoKChsaW5lKSA9PiB7DQogICAgICAgIGNvbnN0IHdyYXBUaW1lcyA9IGdldFdyYXBUaW1lcyhsaW5lLCB0aGlzLm51bVBlckxpbmUpIC0gMQ0KICAgICAgICBsaW5lTnVtYmVycy5wdXNoKG51bSkNCiAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCB3cmFwVGltZXM7ICsraSkgbGluZU51bWJlcnMucHVzaCgnJm5ic3A7JykNCiAgICAgICAgKytudW0NCiAgICAgIH0pDQogICAgICByZXR1cm4gbGluZU51bWJlcnMNCiAgICB9LA0KICAgIGxvbmdlc3RXaWR0aCAoKSB7DQogICAgICBmb3IgKGxldCBpID0gdGhpcy5saW5lcy5sZW5ndGggLSAxOyBpID49IDA7IC0taSkgew0KICAgICAgICAvKiBlc2xpbnQtZGlzYWJsZSBzZWN1cml0eS9kZXRlY3Qtb2JqZWN0LWluamVjdGlvbiAqLw0KICAgICAgICBpZiAodGhpcy5saW5lc1tpXSA9PT0gJyZuYnNwOycpIGNvbnRpbnVlDQogICAgICAgIHJldHVybiAodGhpcy5saW5lc1tpXSArICcnKS5sZW5ndGggKiB0aGlzLndpZHRoUGVyQ2hhciArIDEwIC8vIDEwcHggYmFzZSBwYWRkaW5nLXJpZ2h0DQogICAgICAgIC8qIGVzbGludC1lbmFibGUgc2VjdXJpdHkvZGV0ZWN0LW9iamVjdC1pbmplY3Rpb24gKi8NCiAgICAgIH0NCiAgICB9DQogIH0sDQogIHdhdGNoOiB7DQogICAgLy8gV2hlbiBsZWZ0IGFyZWEgZ3Jvd3Mvc2hyaW5rcyBlLmcuIDkgPT4gMTA7IDEwMCA9PiA5OQ0KICAgIGxvbmdlc3RXaWR0aCAodmFsLCBvbGRWYWwpIHsNCiAgICAgIGlmICh2YWwgIT09IG9sZFZhbCkgdGhpcy4kbmV4dFRpY2soKCkgPT4gdGhpcy5jYWxjdWxhdGVDaGFyYWN0ZXJzUGVyTGluZSgpKQ0KICAgIH0sDQogICAgbm93cmFwICgpIHsNCiAgICAgIHRoaXMuY2FsY3VsYXRlQ2hhcmFjdGVyc1BlckxpbmUoKQ0KICAgIH0sDQogICAgdmFsdWUgKHZhbCkgew0KICAgICAgaWYgKHZhbCAhPT0gdGhpcy5jb250ZW50KSB0aGlzLmNvbnRlbnQgPSB2YWwNCiAgICB9DQogIH0sDQogIG1ldGhvZHM6IHsNCiAgICBjYWxjdWxhdGVDaGFyYWN0ZXJzUGVyTGluZSAoKSB7IC8vIE1heSBiZSArLTEgb2ZmIHJlYWwgdmFsdWUgPl88DQogICAgICBpZiAodGhpcy5ub3dyYXApIHsNCiAgICAgICAgdGhpcy5udW1QZXJMaW5lID0gTnVtYmVyLk1BWF9TQUZFX0lOVEVHRVINCiAgICAgICAgcmV0dXJuDQogICAgICB9DQogICAgICBjb25zdCB0ZXh0YXJlYSA9IHRoaXMuJHJlZnMudGV4dGFyZWENCiAgICAgIGNvbnN0IHN0eWxlcyA9IGdldENvbXB1dGVkU3R5bGUodGV4dGFyZWEpDQogICAgICBjb25zdCBwYWRkaW5nTGVmdCA9IHBhcnNlRmxvYXQoc3R5bGVzLmdldFByb3BlcnR5VmFsdWUoJ3BhZGRpbmctbGVmdCcpKQ0KICAgICAgY29uc3QgcGFkZGluZ1JpZ2h0ID0gcGFyc2VGbG9hdChzdHlsZXMuZ2V0UHJvcGVydHlWYWx1ZSgncGFkZGluZy1yaWdodCcpKQ0KICAgICAgY29uc3QgZm9udFNpemUgPSBzdHlsZXMuZ2V0UHJvcGVydHlWYWx1ZSgnZm9udC1zaXplJykNCiAgICAgIGNvbnN0IGZvbnRGYW1pbHkgPSBzdHlsZXMuZ2V0UHJvcGVydHlWYWx1ZSgnZm9udC1mYW1pbHknKQ0KICAgICAgY29uc3Qgd2lkdGggPSB0ZXh0YXJlYS5jbGllbnRXaWR0aCAtIHBhZGRpbmdMZWZ0IC0gcGFkZGluZ1JpZ2h0DQogICAgICBjb25zdCBoZWxwZXIgPSB0aGlzLiRyZWZzLmhlbHBlcg0KICAgICAgaGVscGVyLnN0eWxlLmZvbnRTaXplID0gZm9udFNpemUNCiAgICAgIGhlbHBlci5zdHlsZS5mb250RmFtaWx5ID0gZm9udEZhbWlseQ0KICAgICAgaGVscGVyLmlubmVySFRNTCA9ICcnDQogICAgICBmb3IgKGxldCBudW0gPSAxOyBudW0gPCA5OTk7ICsrbnVtKSB7DQogICAgICAgIGhlbHBlci5pbm5lckhUTUwgKz0gJ2EnDQogICAgICAgIGlmIChoZWxwZXIuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCkud2lkdGggPiB3aWR0aCkgew0KICAgICAgICAgIHRoaXMubnVtUGVyTGluZSA9IG51bSAtIDENCiAgICAgICAgICBicmVhaw0KICAgICAgICB9DQogICAgICB9DQogICAgfSwNCiAgICBkZXRlY3RSZXNpemUgKCkgew0KICAgICAgY29uc3QgdGV4dGFyZWEgPSB0aGlzLiRyZWZzLnRleHRhcmVhDQogICAgICBjb25zdCB7IGNsaWVudFdpZHRoOiB3MSwgY2xpZW50SGVpZ2h0OiBoMSB9ID0gdGV4dGFyZWENCiAgICAgIGNvbnN0IGRldGVjdCA9ICgpID0+IHsNCiAgICAgICAgY29uc3QgeyBjbGllbnRXaWR0aDogdzIsIGNsaWVudEhlaWdodDogaDIgfSA9IHRleHRhcmVhDQogICAgICAgIGlmICh3MSAhPT0gdzIgfHwgaDEgIT09IGgyKSB0aGlzLmNhbGN1bGF0ZUNoYXJhY3RlcnNQZXJMaW5lKCkNCiAgICAgIH0NCiAgICAgIGNvbnN0IHN0b3AgPSAoKSA9PiB7DQogICAgICAgIHRoaXMuY2FsY3VsYXRlQ2hhcmFjdGVyc1BlckxpbmUoKQ0KICAgICAgICBkb2N1bWVudC5yZW1vdmVFdmVudExpc3RlbmVyKCdtb3VzZW1vdmUnLCBkZXRlY3QpDQogICAgICAgIGRvY3VtZW50LnJlbW92ZUV2ZW50TGlzdGVuZXIoJ21vdXNldXAnLCBzdG9wKQ0KICAgICAgfQ0KICAgICAgZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcignbW91c2Vtb3ZlJywgZGV0ZWN0KQ0KICAgICAgZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcignbW91c2V1cCcsIHN0b3ApDQogICAgfSwNCiAgICBvbklucHV0ICgpIHsNCiAgICAgIHRoaXMuJGVtaXQoJ2lucHV0JywgdGhpcy5jb250ZW50KQ0KICAgICAgdGhpcy5yZWNhbGN1bGF0ZSgpDQogICAgfSwNCiAgICByZWNhbGN1bGF0ZSAoKSB7DQogICAgICBjb25zdCB0ZXh0YXJlYSA9IHRoaXMuJHJlZnMudGV4dGFyZWENCiAgICAgIGNvbnN0IHdpZHRoID0gdGV4dGFyZWEuY2xpZW50V2lkdGgNCiAgICAgIGlmICh3aWR0aCAhPT0gdGhpcy5wcmV2aW91c1dpZHRoKSB0aGlzLmNhbGN1bGF0ZUNoYXJhY3RlcnNQZXJMaW5lKCkNCiAgICAgIHRoaXMucHJldmlvdXNXaWR0aCA9IHdpZHRoDQogICAgfSwNCiAgICBzY3JvbGxMaW5lcyAoZSkgew0KICAgICAgdGhpcy5zY3JvbGxlZExlbmd0aCA9IGUudGFyZ2V0LnNjcm9sbFRvcA0KICAgICAgdGhpcy5zeW5jU2Nyb2xsKCkNCiAgICB9LA0KICAgIHN5bmNTY3JvbGwgKCkgew0KICAgICAgdGhpcy4kcmVmcy5saW5lcy5zdHlsZS50cmFuc2Zvcm0gPSBgdHJhbnNsYXRlWSgkey10aGlzLnNjcm9sbGVkTGVuZ3RofXB4KWANCiAgICB9DQogIH0NCn0NCg=="},{"version":3,"sources":["LinedVTextarea.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmfile":"LinedVTextarea.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n  <div class=\"lined-textarea\">\r\n    <div class=\"lined-textarea__lines\"\r\n      v-if=\"!disabled\"\r\n      :style=\"{ 'padding-right': `${longestWidth}px` }\"\r\n    >\r\n      <div class=\"lined-textarea__lines__inner\"\r\n        ref=\"lines\"\r\n      >\r\n        <p v-for=\"(line, index) in lines\"\r\n          :key=\"index\"\r\n          class=\"lined-textarea__lines__line\"\r\n          :class=\"{ 'lined-textarea__lines__line--invalid': invalidLines.includes(line) }\"\r\n          v-html=\"line\"\r\n        ></p>\r\n      </div>\r\n    </div>\r\n    <textarea :disabled=\"disabled\"\r\n      :placeholder=\"placeholder\"\r\n      class=\"lined-textarea__content\"\r\n      :class=\"{ 'lined-textarea__content--disabled': disabled,\r\n              'lined-textarea__content--wrap': !nowrap,\r\n              'lined-textarea__content--nowrap': nowrap }\"\r\n      v-model=\"content\"\r\n      v-on:scroll=\"scrollLines\"\r\n      v-on:input=\"onInput\"\r\n      v-on:mousedown=\"detectResize\"\r\n      :style=\"styles\"\r\n      ref=\"textarea\"\r\n    ></textarea>\r\n    <div class=\"count-helper\" ref=\"helper\"></div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: 'LinedVTextarea',\r\n  mounted () {\r\n    this.content = this.value\r\n    this.syncScroll()\r\n    this.calculateCharactersPerLine()\r\n  },\r\n  data () {\r\n    return {\r\n      content: '',\r\n      widthPerChar: 8, // Hard coded, ajust when necessary\r\n      numPerLine: 1,\r\n      previousWidth: 0,\r\n      scrolledLength: 0\r\n    }\r\n  },\r\n  props: {\r\n    disabled: {\r\n      type: Boolean,\r\n      default: false\r\n    },\r\n    nowrap: {\r\n      type: Boolean,\r\n      default: true\r\n    },\r\n    placeholder: {\r\n      type: String,\r\n      default: ''\r\n    },\r\n    styles: {\r\n      type: Object,\r\n      default () {\r\n        return {\r\n          height: '300px'\r\n        }\r\n      }\r\n    },\r\n    value: {\r\n      type: String,\r\n      default: ''\r\n    },\r\n    validate: {\r\n      type: Function,\r\n      default: () => true\r\n    }\r\n  },\r\n  computed: {\r\n    invalidLines () {\r\n      const lineNumbers = []\r\n      this.content.split('\\n').forEach((line, index) => {\r\n        if (!this.validate(line)) lineNumbers.push(index + 1)\r\n      })\r\n      return lineNumbers\r\n    },\r\n    lines () {\r\n      if (this.content === '') return [1]\r\n      const lineNumbers = []\r\n      let num = 1\r\n      // Number of lines extended. Seems to work with pre-wrap (has problem with dash)\r\n      function getWrapTimes (sentence, width) {\r\n        if (width <= 0) {\r\n          // Protect against infinite loop\r\n          console.warn('Please set the min-width of textarea to allow at least one character per line.')\r\n          return sentence.length + 1 // Seems browser would add one additional space\r\n        }\r\n        const words = sentence.split(' ')\r\n        let currentLine = 1\r\n        let spaceLeft = width\r\n        words.forEach((word) => {\r\n          let isWidth = spaceLeft === width\r\n          /* eslint-disable no-unmodified-loop-condition */\r\n          while (isWidth && word.length >= spaceLeft) {\r\n            ++currentLine\r\n            word = word.slice(width)\r\n          }\r\n          if (spaceLeft === width) {\r\n            spaceLeft -= word.length\r\n            return\r\n          }\r\n          if (word.length + 1 > spaceLeft) {\r\n            ++currentLine\r\n            spaceLeft = width\r\n          }\r\n          spaceLeft -= isWidth ? word.length : word.length + 1\r\n        })\r\n        return (spaceLeft === width) ? currentLine - 1 : currentLine\r\n      }\r\n      this.content.split('\\n').forEach((line) => {\r\n        const wrapTimes = getWrapTimes(line, this.numPerLine) - 1\r\n        lineNumbers.push(num)\r\n        for (let i = 0; i < wrapTimes; ++i) lineNumbers.push('&nbsp;')\r\n        ++num\r\n      })\r\n      return lineNumbers\r\n    },\r\n    longestWidth () {\r\n      for (let i = this.lines.length - 1; i >= 0; --i) {\r\n        /* eslint-disable security/detect-object-injection */\r\n        if (this.lines[i] === '&nbsp;') continue\r\n        return (this.lines[i] + '').length * this.widthPerChar + 10 // 10px base padding-right\r\n        /* eslint-enable security/detect-object-injection */\r\n      }\r\n    }\r\n  },\r\n  watch: {\r\n    // When left area grows/shrinks e.g. 9 => 10; 100 => 99\r\n    longestWidth (val, oldVal) {\r\n      if (val !== oldVal) this.$nextTick(() => this.calculateCharactersPerLine())\r\n    },\r\n    nowrap () {\r\n      this.calculateCharactersPerLine()\r\n    },\r\n    value (val) {\r\n      if (val !== this.content) this.content = val\r\n    }\r\n  },\r\n  methods: {\r\n    calculateCharactersPerLine () { // May be +-1 off real value >_<\r\n      if (this.nowrap) {\r\n        this.numPerLine = Number.MAX_SAFE_INTEGER\r\n        return\r\n      }\r\n      const textarea = this.$refs.textarea\r\n      const styles = getComputedStyle(textarea)\r\n      const paddingLeft = parseFloat(styles.getPropertyValue('padding-left'))\r\n      const paddingRight = parseFloat(styles.getPropertyValue('padding-right'))\r\n      const fontSize = styles.getPropertyValue('font-size')\r\n      const fontFamily = styles.getPropertyValue('font-family')\r\n      const width = textarea.clientWidth - paddingLeft - paddingRight\r\n      const helper = this.$refs.helper\r\n      helper.style.fontSize = fontSize\r\n      helper.style.fontFamily = fontFamily\r\n      helper.innerHTML = ''\r\n      for (let num = 1; num < 999; ++num) {\r\n        helper.innerHTML += 'a'\r\n        if (helper.getBoundingClientRect().width > width) {\r\n          this.numPerLine = num - 1\r\n          break\r\n        }\r\n      }\r\n    },\r\n    detectResize () {\r\n      const textarea = this.$refs.textarea\r\n      const { clientWidth: w1, clientHeight: h1 } = textarea\r\n      const detect = () => {\r\n        const { clientWidth: w2, clientHeight: h2 } = textarea\r\n        if (w1 !== w2 || h1 !== h2) this.calculateCharactersPerLine()\r\n      }\r\n      const stop = () => {\r\n        this.calculateCharactersPerLine()\r\n        document.removeEventListener('mousemove', detect)\r\n        document.removeEventListener('mouseup', stop)\r\n      }\r\n      document.addEventListener('mousemove', detect)\r\n      document.addEventListener('mouseup', stop)\r\n    },\r\n    onInput () {\r\n      this.$emit('input', this.content)\r\n      this.recalculate()\r\n    },\r\n    recalculate () {\r\n      const textarea = this.$refs.textarea\r\n      const width = textarea.clientWidth\r\n      if (width !== this.previousWidth) this.calculateCharactersPerLine()\r\n      this.previousWidth = width\r\n    },\r\n    scrollLines (e) {\r\n      this.scrolledLength = e.target.scrollTop\r\n      this.syncScroll()\r\n    },\r\n    syncScroll () {\r\n      this.$refs.lines.style.transform = `translateY(${-this.scrolledLength}px)`\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.lined-textarea {\r\n  display: flex;\r\n  font-size: 13px;\r\n  line-height: 150%;\r\n  font-family: Helvetica, monospace;\r\n}\r\n\r\n.lined-textarea__lines {\r\n  background-color: #F0F0F0;\r\n  border: 1px solid #D7E2ED;\r\n  border-radius: 10px 0 0 10px;\r\n  border-right-width: 0;\r\n  padding: 15px 10px 15px 15px;\r\n  overflow: hidden;\r\n  position: relative;\r\n}\r\n\r\n.lined-textarea__lines__inner {\r\n  position: absolute;\r\n}\r\n\r\n.lined-textarea__lines__line {\r\n  text-align: right;\r\n}\r\n\r\n.lined-textarea__lines__line--invalid {\r\n  font-weight: bold;\r\n  color: red;\r\n}\r\n.lined-textarea__content {\r\n  border: 1px solid #D7E2ED;\r\n  border-radius: 0 10px 10px 0;\r\n  border-left-width: 0;\r\n  margin: 0;\r\n  line-height: inherit;\r\n  font-family: monospace;\r\n  padding: 15px;\r\n  width: 100%;\r\n  overflow: auto;\r\n}\r\n\r\n.lined-textarea__content--wrap {\r\n  white-space: pre-wrap;\r\n}\r\n\r\n.lined-textarea__content--nowrap {\r\n  white-space: pre;\r\n}\r\n\r\n@supports (-ms-ime-align:auto) {\r\n  .lined-textarea__content--nowrap {\r\n      white-space: nowrap;\r\n  }\r\n}\r\n\r\n.lined-textarea__content--disabled {\r\n  border-radius: 10px;\r\n  border-left-width: 1px;\r\n}\r\n\r\n.lined-textarea__content:focus {\r\n  outline: none;\r\n}\r\n\r\n.count-helper {\r\n  position: absolute;\r\n  visibility: hidden;\r\n  height: auto;\r\n  width: auto;\r\n}\r\n</style>"]}]}