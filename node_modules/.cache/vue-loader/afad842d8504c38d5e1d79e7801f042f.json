{"remainingRequest":"C:\\Users\\stefa\\Desktop\\VueJS\\jcoui_web - Copia\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\stefa\\Desktop\\VueJS\\jcoui_web - Copia\\src\\components\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\stefa\\Desktop\\VueJS\\jcoui_web - Copia\\src\\components\\index.vue","mtime":1636988101771},{"path":"C:\\Users\\stefa\\Desktop\\VueJS\\jcoui_web - Copia\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1634653954000},{"path":"C:\\Users\\stefa\\Desktop\\VueJS\\jcoui_web - Copia\\node_modules\\babel-loader\\lib\\index.js","mtime":1634653956000},{"path":"C:\\Users\\stefa\\Desktop\\VueJS\\jcoui_web - Copia\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1634653954000},{"path":"C:\\Users\\stefa\\Desktop\\VueJS\\jcoui_web - Copia\\node_modules\\vue-loader\\lib\\index.js","mtime":1634653956000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCgppbXBvcnQgVnVlIGZyb20gJ3Z1ZScKaW1wb3J0IHsgdGltZVN0cmluZyB9IGZyb20gJy4uL2Z1bmN0aW9ucy9mdW5jdGlvblRvb2xzJzsKdmFyIHNlbmRlZD1mYWxzZTsKCgovL2NvbnN0IHZtID0gbmV3IFZ1ZSgpOwp2YXIgY29ubmVjdGVkPWZhbHNlOwp2YXIgcHJlRG9uZT1mYWxzZTsKCmV4cG9ydCB2YXIgY29ubmVjdCA9ICgpID0+IHsKICAvL3ZtLiRjb25uZWN0KCk7Cn0KCmV4cG9ydCB2YXIgZGlzY29ubmVjdCA9ICgpID0+IHsKICAvL3ZtLiRkaXNjb25uZWN0KCk7CiAgLy92bS4kZGVzdHJveSgpOwp9CgpleHBvcnQgdmFyIHNldENvbm5lY3RlZCA9ICgpID0+IHsKICBjb25uZWN0ZWQ9IWNvbm5lY3RlZDsKfQoKZXhwb3J0IHZhciBpc0Nvbm5lY3RlZCA9ICgpID0+IHsKICByZXR1cm4gY29ubmVjdGVkOwp9CgpleHBvcnQgdmFyIHNldFByZURvbmUgPSAoKSA9PiB7CiAgcHJlRG9uZT0hcHJlRG9uZTsKfQoKZXhwb3J0IHZhciBpc1ByZURvbmUgPSAoKSA9PiB7CiAgcmV0dXJuIHByZURvbmU7Cn0KaW1wb3J0IEJhclJlYyBmcm9tICcuL2JhclJlYy52dWUnCmltcG9ydCBCYXJTZW5kIGZyb20gJy4vYmFyU2VuZC52dWUnCmltcG9ydCBCb3R0b21CYXIgZnJvbSAnLi9Cb3R0b21CYXIudnVlJwogIGV4cG9ydCBkZWZhdWx0IHsKICAgIG5hbWU6ICdQYWdpbmFQcmluY2lwYWxlJywKICAgIAogICAgY29tcG9uZW50cyA6IHsKICAgICAgQmFyUmVjLAogICAgICBCYXJTZW5kLAogICAgICBCb3R0b21CYXIKICAgIH0sCiAgICAgIC8qClVTRSBEQiBtb3ZpZSBPTiBTRVJWRVIgbW9uZ28xOwpHRVQgQ09MTEVDVElPTiBtb3ZpZUBtb3ZpZTsgCkZJTFRFUiBDQVNFIFdIRVJFIFdJVEggLm5hbWUJCktFRVAgT1RIRVJTOyAKU0FWRSBBUyB0ZW1wbW92aWVAbW92aWU7CgkgICAgKi8KICAgIGRhdGEoKSB7CiAgICAgIHJldHVybiB7CiAgICAgICAgY29ubmVjdGlvbiA6IG51bGwsCiAgICAgICAgdGV4dFJlYyA6ICcnLAogICAgICAgIHJlY2VpdmVkOiB7CiAgICAgICAgICB0ZXh0Q29uZiA6ICdDb25maWd1cmF6aW9uZSBub24gcHJlc2VudGUnLAogICAgICAgICAgdGV4dExvZyA6ICcnLAogICAgICAgICAgdGV4dEVyckxvZyA6ICcnCiAgICAgICAgfQogICAgICB9CiAgICB9LAogICAgbW91bnRlZCgpewogICAgICB0aGlzLmNvbm5lY3Rpb24gPSBuZXcgV2ViU29ja2V0KCd3czovLycrcHJvY2Vzcy5lbnYuVlVFX0FQUF9FTkdJTkVfU0VSVkVSKTsKICAgICAgICB0aGlzLmNvbm5lY3Rpb24ub25tZXNzYWdlID0gKG1lc3NhZ2UpID0+IHsKICAgICAgICAgICAgY29uc3QgdGV4dD1tZXNzYWdlLmRhdGE7CiAgICAgICAgICAgIGlmKHRleHQuaW5jbHVkZXMoJyMjQkVHSU4tRVJST1IjIycpKXsKICAgICAgICAgICAgICAgIGNvbnN0IHN0YXJ0RT10ZXh0LmluZGV4T2YoJyMjQkVHSU4tRVJST1IjIycpKycjI0JFR0lOLUVSUk9SIyMnLmxlbmd0aDsKICAgICAgICAgICAgICAgIGNvbnN0IGVuZEU9dGV4dC5sYXN0SW5kZXhPZignIyNFTkQtRVJST1IjIycpOwogICAgICAgICAgICAgICAgdGhpcy5jaGFuZ2VFcnJMb2coJyNARVJSLUxPR1NAIycrIHRpbWVTdHJpbmcodGV4dC5zdWJzdHJpbmcoc3RhcnRFLGVuZEUpKSsnI0BFTkQtRVJSLUxPR1NAIycpOwogICAgICAgICAgICAgICAgdGhpcy5jaGFuZ2VMb2coJyNATE9HU0AjJyt0aW1lU3RyaW5nKCdFUlJPUiBJTiBKT0JTLiBTRUUgRVJST1IgTE9HJykrJ1xuI0BFTkQtTE9HU0AjJykKICAgICAgICAgICAgfWVsc2UgaWYodGV4dC5pbmNsdWRlcygnIyNTVUNDRVNTIyMnKSl7CiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZygnc3VjY2Vzc28nKTsKICAgICAgICAgICAgICAgIHRoaXMuY2hhbmdlTG9nKCcjQExPR1NAIycrdGltZVN0cmluZygnSk9CIERPTkUnKSsnXG4jQEVORC1MT0dTQCMnKQogICAgICAgICAgICB9ZWxzZSBpZih0ZXh0LmluY2x1ZGVzKCcjI0JFR0lOLVBST0NFU1MjIycpKXsKICAgICAgICAgICAgICAgIGNvbnN0IHN0YXJ0UD10ZXh0LmluZGV4T2YoJyMjQkVHSU4tUFJPQ0VTUyMjJykrJyMjQkVHSU4tUFJPQ0VTUyMjJy5sZW5ndGg7CiAgICAgICAgICAgICAgICBjb25zdCBlbmRQPXRleHQuaW5kZXhPZignIyNFTkQtUFJPQ0VTUyMjJyk7CiAgICAgICAgICAgICAgICB0aGlzLnJlY2VpdmVkLnRleHRSZWM9dGV4dC5zdWJzdHJpbmcoc3RhcnRQLGVuZFApOwogICAgICAgICAgICAgICAgLy9kaXNjb25uZWN0KCk7CiAgICAgICAgICAgIH1lbHNlIGlmKHRleHQuaW5jbHVkZXMoJyMjQkVHSU4tU0VSVkVSLUNPTkYjIycpKXsKICAgICAgICAgICAgICAgIGNvbnN0IHN0YXJ0RT10ZXh0LmluZGV4T2YoJyMjQkVHSU4tU0VSVkVSLUNPTkYjIycpKycjI0JFR0lOLVNFUlZFUi1DT05GIyMnLmxlbmd0aDsKICAgICAgICAgICAgICAgIGNvbnN0IGVuZEU9dGV4dC5sYXN0SW5kZXhPZignIyNFTkQtU0VSVkVSLUNPTkYjIycpOwogICAgICAgICAgICAgICAgdGhpcy5jaGFuZ2VDb25maWcodGV4dC5zdWJzdHJpbmcoc3RhcnRFLGVuZEUpKTsKICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKCdjb25maWcnKTsKICAgICAgICAgICAgICAgIGlmKCFpc1ByZURvbmUoKSl7CiAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coJ2Rpc2Nvbm5lY3QgaW4gY29uZmlnJyk7CiAgICAgICAgICAgICAgICAgICAgLy9kaXNjb25uZWN0KCk7CiAgICAgICAgICAgICAgICAgICAgc2V0UHJlRG9uZSgpOwogICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgfQogICAgICAgICB9OwoKICAgICAgICB0aGlzLmNvbm5lY3Rpb24ub25vcGVuID0gKCkgPT4gewogICAgICAgICAgICBpZighaXNDb25uZWN0ZWQoKSl7CiAgICAgICAgICAgICAgICAvL3RoaXMuY2hhbmdlTG9nKCcjQExPR1NAIycrdGltZVN0cmluZygnQ29ubmVjdGlvbiB3aXRoIGVuZ2luZSBlc3RhYmxpc2hlZCcpKydcbiNARU5ELUxPR1NAIycpOwogICAgICAgICAgICAgICAgc2V0Q29ubmVjdGVkKCk7CiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZygnb3BvcGVuIHJlYycpOwogICAgICAgICAgICB9CiAgICAgICAgfQoKICAgICAgICB0aGlzLmNvbm5lY3Rpb24ub25jbG9zZSA9ICgpID0+IHsKICAgICAgICAgICAgaWYoaXNDb25uZWN0ZWQoKSl7CiAgICAgICAgICAgICAgICBzZXRDb25uZWN0ZWQoKTsKICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKCdkaXNjb25uZWN0Jyk7CiAgICAgICAgICAgIH0KICAgICAgICAgfQoKICAgICAgICAgdGhpcy5jb25uZWN0aW9uLm9uZXJyb3IgPSAoKSA9PiB7CiAgICAgICAgICAgIGlmKGlzQ29ubmVjdGVkKXsgCiAgICAgICAgICAgICAgICB0aGlzLmNoYW5nZUNvbmZpZygnQ29uZmlndXJhemlvbmUgbm9uIHByZXNlbnRlJyk7CiAgICAgICAgICAgICAgICB0aGlzLmNoYW5nZUxvZygnI0BMT0dTQCMnK3RpbWVTdHJpbmcoJ0Nvbm5lY3Rpb24gd2l0aCBlbmdpbmUgY3Jhc2hlZCcpKydcbiNARU5ELUxPR1NAIycpOwogICAgICAgICAgICAgICAgc2V0Q29ubmVjdGVkKCk7CiAgICAgICAgICAgIH0KICAgICAgICAgfQogICAgICAgICAvL3ZtLiRvbigncmVjZWl2ZWREYXRhJywodik9Pnt0aGlzLnRleHRSKz12O30pCiAgICB9LAogICAgbWV0aG9kczp7CiAgICAgIGNoYW5nZUNvbmZpZyh0ZXh0VG9DaGFuZ2UpewogICAgICAgIGlmKHRleHRUb0NoYW5nZS5zdGFydHNXaXRoKCd7JykpewogICAgICAgICAgdmFyIHBhcnNlSlNPTiA9IEpTT04ucGFyc2UodGV4dFRvQ2hhbmdlKTsKICAgICAgICAgIHZhciBKU09OSW5QcmV0dHlGb3JtYXQgPSBKU09OLnN0cmluZ2lmeShwYXJzZUpTT04sIHVuZGVmaW5lZCwgNCk7CiAgICAgICAgICB0aGlzLnJlY2VpdmVkLnRleHRDb25mPUpTT05JblByZXR0eUZvcm1hdDsKICAgICAgICB9ZWxzZXsKICAgICAgICAgIHRoaXMucmVjZWl2ZWQudGV4dENvbmY9dGV4dFRvQ2hhbmdlOwogICAgICAgIH0KICAgICAgfSwKICAgICAgY2hhbmdlRXJyTG9nKHRleHRUb0NoYW5nZSl7CiAgICAgICAgY29uc3Qgc3RhcnRFPXRleHRUb0NoYW5nZS5pbmRleE9mKCcjQEVSUi1MT0dTQCMnKSsnI0BFUlItTE9HU0AjJy5sZW5ndGg7CiAgICAgICAgY29uc3QgZW5kRT10ZXh0VG9DaGFuZ2UubGFzdEluZGV4T2YoJyNARU5ELUVSUi1MT0dTQCMnKTsKICAgICAgICB0aGlzLnJlY2VpdmVkLnRleHRFcnJMb2crPSB0ZXh0VG9DaGFuZ2Uuc3Vic3RyaW5nKHN0YXJ0RSxlbmRFKTsKICAgICAgICBhbGVydCh0ZXh0VG9DaGFuZ2Uuc3Vic3RyaW5nKHN0YXJ0RSxlbmRFKSk7CiAgICAgIH0sCiAgICAgIGNoYW5nZUxvZyh0ZXh0VG9DaGFuZ2UpewogICAgICAgIGNvbnN0IHN0YXJ0RT10ZXh0VG9DaGFuZ2UuaW5kZXhPZignI0BMT0dTQCMnKSsnI0BMT0dTQCMnLmxlbmd0aDsKICAgICAgICBjb25zdCBlbmRFPXRleHRUb0NoYW5nZS5sYXN0SW5kZXhPZignI0BFTkQtTE9HU0AjJyk7CiAgICAgICAgdGhpcy5yZWNlaXZlZC50ZXh0TG9nKz0gdGV4dFRvQ2hhbmdlLnN1YnN0cmluZyhzdGFydEUsZW5kRSk7CiAgICAgIH0sCgogICAgICBzZW5kTXNnKHRleHRTZW5kKXsKICAgICAgICAgICAgaWYoaXNQcmVEb25lKCkgJiYgdGV4dFNlbmQubGVuZ3RoPjApewogICAgICAgICAgICAgICAgaWYoaXNDb25uZWN0ZWQoKSl7CiAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKCdvbm9wZW4gc2VuZCcpOwogICAgICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZygnU2VuZGluZyBkYXRhJyk7CiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuY29ubmVjdGlvbi5zZW5kKCcjI0JFR0lOLVBST0NFU1MjI1xuJyt0ZXh0U2VuZCsnXG4jI0VORC1QUk9DRVNTIyMnKTsKICAgICAgICAgICAgICAgICAgICAgICAgc2VuZGVkPXRydWU7CiAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICB9ZWxzZXsKICAgICAgICAgICAgICAgICAgICB0aGlzLmNvbm5lY3Rpb24uY2xvc2UoKTsKICAgICAgICAgICAgICAgICAgICB0aGlzLmNvbm5lY3Rpb249bmV3IFdlYlNvY2tldCgnd3M6Ly8nK3Byb2Nlc3MuZW52LlZVRV9BUFBfRU5HSU5FX1NFUlZFUik7CiAgICAgICAgICAgICAgICAgICAgaWYoIXNlbmRlZCl7CiAgICAgICAgICAgICAgICAgICAgICB0aGlzLmNvbm5lY3Rpb24ub25vcGVuID0gKCkgPT4gewogICAgICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZygnb25vcGVuIHNlbmQnKTsKICAgICAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coJ1NlbmRpbmcgZGF0YScpOwogICAgICAgICAgICAgICAgICAgICAgICB0aGlzLmNvbm5lY3Rpb24uc2VuZCgnIyNCRUdJTi1QUk9DRVNTIyNcbicrdGV4dFNlbmQrJ1xuIyNFTkQtUFJPQ0VTUyMjJyk7CiAgICAgICAgICAgICAgICAgICAgICAgIHNlbmRlZD10cnVlOwogICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICB9CiAgICB9CiAgfQoKCg=="},{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4BA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div id=\"body\">\n  <v-container>\n    <v-row class=\"text-center\">\n      <!--<v-col cols=\"12\">\n        <v-img\n          :src=\"require('../assets/logo.svg')\"\n          class=\"my-3\"\n          contain\n          height=\"100\"\n        />\n      </v-col> -->\n\n      <v-col class=\"mb-4\">\n        <h1 class=\"display-2 font-weight-bold mb-3\">\n            JCOUIweb \n        </h1>\n        <bar-rec :recText=\"textRec\"></bar-rec>\n        <bar-send v-on:click-send=\"sendMsg($event)\"></bar-send>\n      </v-col>\n    </v-row>\n  </v-container>\n  <bottom-bar class=\"end-align\" :bottomText=\"received\"></bottom-bar>\n  </div>\n</template>\n\n<script>\n\nimport Vue from 'vue'\nimport { timeString } from '../functions/functionTools';\nvar sended=false;\n\n\n//const vm = new Vue();\nvar connected=false;\nvar preDone=false;\n\nexport var connect = () => {\n  //vm.$connect();\n}\n\nexport var disconnect = () => {\n  //vm.$disconnect();\n  //vm.$destroy();\n}\n\nexport var setConnected = () => {\n  connected=!connected;\n}\n\nexport var isConnected = () => {\n  return connected;\n}\n\nexport var setPreDone = () => {\n  preDone=!preDone;\n}\n\nexport var isPreDone = () => {\n  return preDone;\n}\nimport BarRec from './barRec.vue'\nimport BarSend from './barSend.vue'\nimport BottomBar from './BottomBar.vue'\n  export default {\n    name: 'PaginaPrincipale',\n    \n    components : {\n      BarRec,\n      BarSend,\n      BottomBar\n    },\n      /*\nUSE DB movie ON SERVER mongo1;\nGET COLLECTION movie@movie; \nFILTER CASE WHERE WITH .name\t\nKEEP OTHERS; \nSAVE AS tempmovie@movie;\n\t    */\n    data() {\n      return {\n        connection : null,\n        textRec : '',\n        received: {\n          textConf : 'Configurazione non presente',\n          textLog : '',\n          textErrLog : ''\n        }\n      }\n    },\n    mounted(){\n      this.connection = new WebSocket('ws://'+process.env.VUE_APP_ENGINE_SERVER);\n        this.connection.onmessage = (message) => {\n            const text=message.data;\n            if(text.includes('##BEGIN-ERROR##')){\n                const startE=text.indexOf('##BEGIN-ERROR##')+'##BEGIN-ERROR##'.length;\n                const endE=text.lastIndexOf('##END-ERROR##');\n                this.changeErrLog('#@ERR-LOGS@#'+ timeString(text.substring(startE,endE))+'#@END-ERR-LOGS@#');\n                this.changeLog('#@LOGS@#'+timeString('ERROR IN JOBS. SEE ERROR LOG')+'\\n#@END-LOGS@#')\n            }else if(text.includes('##SUCCESS##')){\n                console.log('successo');\n                this.changeLog('#@LOGS@#'+timeString('JOB DONE')+'\\n#@END-LOGS@#')\n            }else if(text.includes('##BEGIN-PROCESS##')){\n                const startP=text.indexOf('##BEGIN-PROCESS##')+'##BEGIN-PROCESS##'.length;\n                const endP=text.indexOf('##END-PROCESS##');\n                this.received.textRec=text.substring(startP,endP);\n                //disconnect();\n            }else if(text.includes('##BEGIN-SERVER-CONF##')){\n                const startE=text.indexOf('##BEGIN-SERVER-CONF##')+'##BEGIN-SERVER-CONF##'.length;\n                const endE=text.lastIndexOf('##END-SERVER-CONF##');\n                this.changeConfig(text.substring(startE,endE));\n                console.log('config');\n                if(!isPreDone()){\n                    console.log('disconnect in config');\n                    //disconnect();\n                    setPreDone();\n                }\n\n            }\n         };\n\n        this.connection.onopen = () => {\n            if(!isConnected()){\n                //this.changeLog('#@LOGS@#'+timeString('Connection with engine established')+'\\n#@END-LOGS@#');\n                setConnected();\n                console.log('opopen rec');\n            }\n        }\n\n        this.connection.onclose = () => {\n            if(isConnected()){\n                setConnected();\n                console.log('disconnect');\n            }\n         }\n\n         this.connection.onerror = () => {\n            if(isConnected){ \n                this.changeConfig('Configurazione non presente');\n                this.changeLog('#@LOGS@#'+timeString('Connection with engine crashed')+'\\n#@END-LOGS@#');\n                setConnected();\n            }\n         }\n         //vm.$on('receivedData',(v)=>{this.textR+=v;})\n    },\n    methods:{\n      changeConfig(textToChange){\n        if(textToChange.startsWith('{')){\n          var parseJSON = JSON.parse(textToChange);\n          var JSONInPrettyFormat = JSON.stringify(parseJSON, undefined, 4);\n          this.received.textConf=JSONInPrettyFormat;\n        }else{\n          this.received.textConf=textToChange;\n        }\n      },\n      changeErrLog(textToChange){\n        const startE=textToChange.indexOf('#@ERR-LOGS@#')+'#@ERR-LOGS@#'.length;\n        const endE=textToChange.lastIndexOf('#@END-ERR-LOGS@#');\n        this.received.textErrLog+= textToChange.substring(startE,endE);\n        alert(textToChange.substring(startE,endE));\n      },\n      changeLog(textToChange){\n        const startE=textToChange.indexOf('#@LOGS@#')+'#@LOGS@#'.length;\n        const endE=textToChange.lastIndexOf('#@END-LOGS@#');\n        this.received.textLog+= textToChange.substring(startE,endE);\n      },\n\n      sendMsg(textSend){\n            if(isPreDone() && textSend.length>0){\n                if(isConnected()){\n                    \n                        console.log('onopen send');\n                        console.log('Sending data');\n                        this.connection.send('##BEGIN-PROCESS##\\n'+textSend+'\\n##END-PROCESS##');\n                        sended=true;\n                    \n                }else{\n                    this.connection.close();\n                    this.connection=new WebSocket('ws://'+process.env.VUE_APP_ENGINE_SERVER);\n                    if(!sended){\n                      this.connection.onopen = () => {\n                        console.log('onopen send');\n                        console.log('Sending data');\n                        this.connection.send('##BEGIN-PROCESS##\\n'+textSend+'\\n##END-PROCESS##');\n                        sended=true;\n                      }\n                    }\n                }\n            }\n      }\n    }\n  }\n\n\n</script>\n"]}]}