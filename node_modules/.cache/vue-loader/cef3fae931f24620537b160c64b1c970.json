{"remainingRequest":"C:\\Users\\stefa\\Desktop\\VueJS\\jcoui_web\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\stefa\\Desktop\\VueJS\\jcoui_web\\src\\components\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\stefa\\Desktop\\VueJS\\jcoui_web\\src\\components\\index.vue","mtime":1636993395888},{"path":"C:\\Users\\stefa\\Desktop\\VueJS\\jcoui_web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1634653954000},{"path":"C:\\Users\\stefa\\Desktop\\VueJS\\jcoui_web\\node_modules\\babel-loader\\lib\\index.js","mtime":1634653956000},{"path":"C:\\Users\\stefa\\Desktop\\VueJS\\jcoui_web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1634653954000},{"path":"C:\\Users\\stefa\\Desktop\\VueJS\\jcoui_web\\node_modules\\vue-loader\\lib\\index.js","mtime":1634653956000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCgovL2ltcG9ydCBWdWUgZnJvbSAndnVlJwppbXBvcnQgeyB0aW1lU3RyaW5nIH0gZnJvbSAnLi4vZnVuY3Rpb25zL2Z1bmN0aW9uVG9vbHMnOwp2YXIgc2VuZGVkPWZhbHNlOwoKCi8vY29uc3Qgdm0gPSBuZXcgVnVlKCk7CnZhciBjb25uZWN0ZWQ9ZmFsc2U7CnZhciBwcmVEb25lPWZhbHNlOwoKZXhwb3J0IHZhciBjb25uZWN0ID0gKCkgPT4gewogIC8vdm0uJGNvbm5lY3QoKTsKfQoKZXhwb3J0IHZhciBkaXNjb25uZWN0ID0gKCkgPT4gewogIC8vdm0uJGRpc2Nvbm5lY3QoKTsKICAvL3ZtLiRkZXN0cm95KCk7Cn0KCmV4cG9ydCB2YXIgc2V0Q29ubmVjdGVkID0gKCkgPT4gewogIGNvbm5lY3RlZD0hY29ubmVjdGVkOwp9CgpleHBvcnQgdmFyIGlzQ29ubmVjdGVkID0gKCkgPT4gewogIHJldHVybiBjb25uZWN0ZWQ7Cn0KCmV4cG9ydCB2YXIgc2V0UHJlRG9uZSA9ICgpID0+IHsKICBwcmVEb25lPSFwcmVEb25lOwp9CgpleHBvcnQgdmFyIGlzUHJlRG9uZSA9ICgpID0+IHsKICByZXR1cm4gcHJlRG9uZTsKfQppbXBvcnQgQmFyUmVjIGZyb20gJy4vYmFyUmVjLnZ1ZScKaW1wb3J0IEJhclNlbmQgZnJvbSAnLi9iYXJTZW5kLnZ1ZScKaW1wb3J0IEJvdHRvbUJhciBmcm9tICcuL0JvdHRvbUJhci52dWUnCiAgZXhwb3J0IGRlZmF1bHQgewogICAgbmFtZTogJ1BhZ2luYVByaW5jaXBhbGUnLAogICAgCiAgICBjb21wb25lbnRzIDogewogICAgICBCYXJSZWMsCiAgICAgIEJhclNlbmQsCiAgICAgIEJvdHRvbUJhcgogICAgfSwKICAgICAgLyoKVVNFIERCIG1vdmllIE9OIFNFUlZFUiBtb25nbzE7CkdFVCBDT0xMRUNUSU9OIG1vdmllQG1vdmllOyAKRklMVEVSIENBU0UgV0hFUkUgV0lUSCAubmFtZQkKS0VFUCBPVEhFUlM7IApTQVZFIEFTIHRlbXBtb3ZpZUBtb3ZpZTsKCSAgICAqLwogICAgZGF0YSgpIHsKICAgICAgcmV0dXJuIHsKICAgICAgICBjb25uZWN0aW9uIDogbnVsbCwKICAgICAgICB0ZXh0UmVjIDogJycsCiAgICAgICAgcmVjZWl2ZWQ6IHsKICAgICAgICAgIHRleHRDb25mIDogJ0NvbmZpZ3VyYXppb25lIG5vbiBwcmVzZW50ZScsCiAgICAgICAgICB0ZXh0TG9nIDogJycsCiAgICAgICAgICB0ZXh0RXJyTG9nIDogJycKICAgICAgICB9CiAgICAgIH0KICAgIH0sCiAgICBtb3VudGVkKCl7CiAgICAgIHRoaXMuY29ubmVjdGlvbiA9IG5ldyBXZWJTb2NrZXQoJ3dzOi8vJytwcm9jZXNzLmVudi5WVUVfQVBQX0VOR0lORV9TRVJWRVIpOwogICAgICAgIHRoaXMuY29ubmVjdGlvbi5vbm1lc3NhZ2UgPSAobWVzc2FnZSkgPT4gewogICAgICAgICAgICBjb25zdCB0ZXh0PW1lc3NhZ2UuZGF0YTsKICAgICAgICAgICAgaWYodGV4dC5pbmNsdWRlcygnIyNCRUdJTi1FUlJPUiMjJykpewogICAgICAgICAgICAgICAgY29uc3Qgc3RhcnRFPXRleHQuaW5kZXhPZignIyNCRUdJTi1FUlJPUiMjJykrJyMjQkVHSU4tRVJST1IjIycubGVuZ3RoOwogICAgICAgICAgICAgICAgY29uc3QgZW5kRT10ZXh0Lmxhc3RJbmRleE9mKCcjI0VORC1FUlJPUiMjJyk7CiAgICAgICAgICAgICAgICB0aGlzLmNoYW5nZUVyckxvZygnI0BFUlItTE9HU0AjJysgdGltZVN0cmluZyh0ZXh0LnN1YnN0cmluZyhzdGFydEUsZW5kRSkpKycjQEVORC1FUlItTE9HU0AjJyk7CiAgICAgICAgICAgICAgICB0aGlzLmNoYW5nZUxvZygnI0BMT0dTQCMnK3RpbWVTdHJpbmcoJ0VSUk9SIElOIEpPQlMuIFNFRSBFUlJPUiBMT0cnKSsnXG4jQEVORC1MT0dTQCMnKQogICAgICAgICAgICB9ZWxzZSBpZih0ZXh0LmluY2x1ZGVzKCcjI1NVQ0NFU1MjIycpKXsKICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKCdzdWNjZXNzbycpOwogICAgICAgICAgICAgICAgdGhpcy5jaGFuZ2VMb2coJyNATE9HU0AjJyt0aW1lU3RyaW5nKCdKT0IgRE9ORScpKydcbiNARU5ELUxPR1NAIycpCiAgICAgICAgICAgIH1lbHNlIGlmKHRleHQuaW5jbHVkZXMoJyMjQkVHSU4tUFJPQ0VTUyMjJykpewogICAgICAgICAgICAgICAgY29uc29sZS5sb2coJ2VuZCBtZXNzYWdlcycpOwogICAgICAgICAgICAgICAgY29uc3Qgc3RhcnRQPXRleHQuaW5kZXhPZignIyNCRUdJTi1QUk9DRVNTIyMnKSsnIyNCRUdJTi1QUk9DRVNTIyMnLmxlbmd0aDsKICAgICAgICAgICAgICAgIGNvbnN0IGVuZFA9dGV4dC5pbmRleE9mKCcjI0VORC1QUk9DRVNTIyMnKTsKICAgICAgICAgICAgICAgIHRoaXMudGV4dFJlYz10ZXh0LnN1YnN0cmluZyhzdGFydFAsZW5kUCk7CiAgICAgICAgICAgICAgICAvL2Rpc2Nvbm5lY3QoKTsKICAgICAgICAgICAgfWVsc2UgaWYodGV4dC5pbmNsdWRlcygnIyNCRUdJTi1TRVJWRVItQ09ORiMjJykpewogICAgICAgICAgICAgICAgY29uc3Qgc3RhcnRFPXRleHQuaW5kZXhPZignIyNCRUdJTi1TRVJWRVItQ09ORiMjJykrJyMjQkVHSU4tU0VSVkVSLUNPTkYjIycubGVuZ3RoOwogICAgICAgICAgICAgICAgY29uc3QgZW5kRT10ZXh0Lmxhc3RJbmRleE9mKCcjI0VORC1TRVJWRVItQ09ORiMjJyk7CiAgICAgICAgICAgICAgICB0aGlzLmNoYW5nZUNvbmZpZyh0ZXh0LnN1YnN0cmluZyhzdGFydEUsZW5kRSkpOwogICAgICAgICAgICAgICAgY29uc29sZS5sb2coJ2NvbmZpZycpOwogICAgICAgICAgICAgICAgaWYoIWlzUHJlRG9uZSgpKXsKICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZygnZGlzY29ubmVjdCBpbiBjb25maWcnKTsKICAgICAgICAgICAgICAgICAgICAvL2Rpc2Nvbm5lY3QoKTsKICAgICAgICAgICAgICAgICAgICBzZXRQcmVEb25lKCk7CiAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICB9CiAgICAgICAgIH07CgogICAgICAgIHRoaXMuY29ubmVjdGlvbi5vbm9wZW4gPSAoKSA9PiB7CiAgICAgICAgICAgIGlmKCFpc0Nvbm5lY3RlZCgpKXsKICAgICAgICAgICAgICAgIC8vdGhpcy5jaGFuZ2VMb2coJyNATE9HU0AjJyt0aW1lU3RyaW5nKCdDb25uZWN0aW9uIHdpdGggZW5naW5lIGVzdGFibGlzaGVkJykrJ1xuI0BFTkQtTE9HU0AjJyk7CiAgICAgICAgICAgICAgICBzZXRDb25uZWN0ZWQoKTsKICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKCdvcG9wZW4gcmVjJyk7CiAgICAgICAgICAgIH0KICAgICAgICB9CgogICAgICAgIHRoaXMuY29ubmVjdGlvbi5vbmNsb3NlID0gKCkgPT4gewogICAgICAgICAgICBpZihpc0Nvbm5lY3RlZCgpKXsKICAgICAgICAgICAgICAgIHNldENvbm5lY3RlZCgpOwogICAgICAgICAgICAgICAgY29uc29sZS5sb2coJ2Rpc2Nvbm5lY3QnKTsKICAgICAgICAgICAgfQogICAgICAgICB9CgogICAgICAgICB0aGlzLmNvbm5lY3Rpb24ub25lcnJvciA9ICgpID0+IHsKICAgICAgICAgICAgaWYoaXNDb25uZWN0ZWQpeyAKICAgICAgICAgICAgICAgIHRoaXMuY2hhbmdlQ29uZmlnKCdDb25maWd1cmF6aW9uZSBub24gcHJlc2VudGUnKTsKICAgICAgICAgICAgICAgIHRoaXMuY2hhbmdlTG9nKCcjQExPR1NAIycrdGltZVN0cmluZygnQ29ubmVjdGlvbiB3aXRoIGVuZ2luZSBjcmFzaGVkJykrJ1xuI0BFTkQtTE9HU0AjJyk7CiAgICAgICAgICAgICAgICBzZXRDb25uZWN0ZWQoKTsKICAgICAgICAgICAgfQogICAgICAgICB9CiAgICAgICAgIC8vdm0uJG9uKCdyZWNlaXZlZERhdGEnLCh2KT0+e3RoaXMudGV4dFIrPXY7fSkKICAgIH0sCiAgICBtZXRob2RzOnsKICAgICAgY2hhbmdlQ29uZmlnKHRleHRUb0NoYW5nZSl7CiAgICAgICAgaWYodGV4dFRvQ2hhbmdlLnN0YXJ0c1dpdGgoJ3snKSl7CiAgICAgICAgICB2YXIgcGFyc2VKU09OID0gSlNPTi5wYXJzZSh0ZXh0VG9DaGFuZ2UpOwogICAgICAgICAgdmFyIEpTT05JblByZXR0eUZvcm1hdCA9IEpTT04uc3RyaW5naWZ5KHBhcnNlSlNPTiwgdW5kZWZpbmVkLCA0KTsKICAgICAgICAgIHRoaXMucmVjZWl2ZWQudGV4dENvbmY9SlNPTkluUHJldHR5Rm9ybWF0OwogICAgICAgIH1lbHNlewogICAgICAgICAgdGhpcy5yZWNlaXZlZC50ZXh0Q29uZj10ZXh0VG9DaGFuZ2U7CiAgICAgICAgfQogICAgICB9LAogICAgICBjaGFuZ2VFcnJMb2codGV4dFRvQ2hhbmdlKXsKICAgICAgICBjb25zdCBzdGFydEU9dGV4dFRvQ2hhbmdlLmluZGV4T2YoJyNARVJSLUxPR1NAIycpKycjQEVSUi1MT0dTQCMnLmxlbmd0aDsKICAgICAgICBjb25zdCBlbmRFPXRleHRUb0NoYW5nZS5sYXN0SW5kZXhPZignI0BFTkQtRVJSLUxPR1NAIycpOwogICAgICAgIHRoaXMucmVjZWl2ZWQudGV4dEVyckxvZys9IHRleHRUb0NoYW5nZS5zdWJzdHJpbmcoc3RhcnRFLGVuZEUpOwogICAgICAgIGFsZXJ0KHRleHRUb0NoYW5nZS5zdWJzdHJpbmcoc3RhcnRFLGVuZEUpKTsKICAgICAgfSwKICAgICAgY2hhbmdlTG9nKHRleHRUb0NoYW5nZSl7CiAgICAgICAgY29uc3Qgc3RhcnRFPXRleHRUb0NoYW5nZS5pbmRleE9mKCcjQExPR1NAIycpKycjQExPR1NAIycubGVuZ3RoOwogICAgICAgIGNvbnN0IGVuZEU9dGV4dFRvQ2hhbmdlLmxhc3RJbmRleE9mKCcjQEVORC1MT0dTQCMnKTsKICAgICAgICB0aGlzLnJlY2VpdmVkLnRleHRMb2crPSB0ZXh0VG9DaGFuZ2Uuc3Vic3RyaW5nKHN0YXJ0RSxlbmRFKTsKICAgICAgfSwKICAgICAgIHNlbmRCY2soKXsKICAgICAgICAgICAgaWYoaXNQcmVEb25lKCkpewogICAgICAgICAgICAgICAgaWYoaXNDb25uZWN0ZWQoKSl7CiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuY29ubmVjdGlvbi5zZW5kKCcjI0JBQ0tUUkFDSyMjJyk7CiAgICAgICAgICAgICAgICAgICAgICAgIHNlbmRlZD10cnVlOwogICAgICAgICAgICAgICAgfWVsc2V7CiAgICAgICAgICAgICAgICAgICAgdGhpcy5jb25uZWN0aW9uLmNsb3NlKCk7CiAgICAgICAgICAgICAgICAgICAgdGhpcy5jb25uZWN0aW9uPW5ldyBXZWJTb2NrZXQoJ3dzOi8vJytwcm9jZXNzLmVudi5WVUVfQVBQX0VOR0lORV9TRVJWRVIpOwogICAgICAgICAgICAgICAgICAgIGlmKCFzZW5kZWQpewogICAgICAgICAgICAgICAgICAgICAgdGhpcy5jb25uZWN0aW9uLm9ub3BlbiA9ICgpID0+IHsKICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5jb25uZWN0aW9uLnNlbmQoJyMjQkFDS1RSQUNLIyMnKTsKICAgICAgICAgICAgICAgICAgICAgICAgc2VuZGVkPXRydWU7CiAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgIH0sCiAgICAgIHNlbmRNc2codGV4dFNlbmQpewogICAgICAgICAgICBpZihpc1ByZURvbmUoKSAmJiB0ZXh0U2VuZC5sZW5ndGg+MCl7CiAgICAgICAgICAgICAgICBpZihpc0Nvbm5lY3RlZCgpKXsKICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coJ29ub3BlbiBzZW5kJyk7CiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKCdTZW5kaW5nIGRhdGEnKTsKICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5jb25uZWN0aW9uLnNlbmQoJyMjQkVHSU4tUFJPQ0VTUyMjXG4nK3RleHRTZW5kKydcbiMjRU5ELVBST0NFU1MjIycpOwogICAgICAgICAgICAgICAgICAgICAgICBzZW5kZWQ9dHJ1ZTsKICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgIH1lbHNlewogICAgICAgICAgICAgICAgICAgIHRoaXMuY29ubmVjdGlvbi5jbG9zZSgpOwogICAgICAgICAgICAgICAgICAgIHRoaXMuY29ubmVjdGlvbj1uZXcgV2ViU29ja2V0KCd3czovLycrcHJvY2Vzcy5lbnYuVlVFX0FQUF9FTkdJTkVfU0VSVkVSKTsKICAgICAgICAgICAgICAgICAgICBpZighc2VuZGVkKXsKICAgICAgICAgICAgICAgICAgICAgIHRoaXMuY29ubmVjdGlvbi5vbm9wZW4gPSAoKSA9PiB7CiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKCdvbm9wZW4gc2VuZCcpOwogICAgICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZygnU2VuZGluZyBkYXRhJyk7CiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuY29ubmVjdGlvbi5zZW5kKCcjI0JFR0lOLVBST0NFU1MjI1xuJyt0ZXh0U2VuZCsnXG4jI0VORC1QUk9DRVNTIyMnKTsKICAgICAgICAgICAgICAgICAgICAgICAgc2VuZGVkPXRydWU7CiAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgIH0KICAgIH0KICB9CgoK"},{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+BA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div id=\"body\">\n    <center><h1 class=\"display-2 font-weight-bold mb-3\">\n            JCOUIweb \n     </h1></center>\n  <v-container>\n    <v-row class=\"text-center\">\n      <!--<v-col cols=\"12\">\n        <v-img\n          :src=\"require('../assets/logo.svg')\"\n          class=\"my-3\"\n          contain\n          height=\"100\"\n        />\n      </v-col> -->\n      \n      <v-col class=\"mb-4\">\n        \n        <bar-rec :recText=\"textRec\"></bar-rec>\n        <bar-send v-on:click-send=\"sendMsg($event)\"></bar-send>\n      </v-col><v-col>\n        <bottom-bar class=\"end-align\" v-on:click-back-index=\"sendBck()\"  :bottomText=\"received\"></bottom-bar>\n        </v-col>\n    </v-row>\n  </v-container>\n  \n  </div>\n</template>\n\n<script>\n\n//import Vue from 'vue'\nimport { timeString } from '../functions/functionTools';\nvar sended=false;\n\n\n//const vm = new Vue();\nvar connected=false;\nvar preDone=false;\n\nexport var connect = () => {\n  //vm.$connect();\n}\n\nexport var disconnect = () => {\n  //vm.$disconnect();\n  //vm.$destroy();\n}\n\nexport var setConnected = () => {\n  connected=!connected;\n}\n\nexport var isConnected = () => {\n  return connected;\n}\n\nexport var setPreDone = () => {\n  preDone=!preDone;\n}\n\nexport var isPreDone = () => {\n  return preDone;\n}\nimport BarRec from './barRec.vue'\nimport BarSend from './barSend.vue'\nimport BottomBar from './BottomBar.vue'\n  export default {\n    name: 'PaginaPrincipale',\n    \n    components : {\n      BarRec,\n      BarSend,\n      BottomBar\n    },\n      /*\nUSE DB movie ON SERVER mongo1;\nGET COLLECTION movie@movie; \nFILTER CASE WHERE WITH .name\t\nKEEP OTHERS; \nSAVE AS tempmovie@movie;\n\t    */\n    data() {\n      return {\n        connection : null,\n        textRec : '',\n        received: {\n          textConf : 'Configurazione non presente',\n          textLog : '',\n          textErrLog : ''\n        }\n      }\n    },\n    mounted(){\n      this.connection = new WebSocket('ws://'+process.env.VUE_APP_ENGINE_SERVER);\n        this.connection.onmessage = (message) => {\n            const text=message.data;\n            if(text.includes('##BEGIN-ERROR##')){\n                const startE=text.indexOf('##BEGIN-ERROR##')+'##BEGIN-ERROR##'.length;\n                const endE=text.lastIndexOf('##END-ERROR##');\n                this.changeErrLog('#@ERR-LOGS@#'+ timeString(text.substring(startE,endE))+'#@END-ERR-LOGS@#');\n                this.changeLog('#@LOGS@#'+timeString('ERROR IN JOBS. SEE ERROR LOG')+'\\n#@END-LOGS@#')\n            }else if(text.includes('##SUCCESS##')){\n                console.log('successo');\n                this.changeLog('#@LOGS@#'+timeString('JOB DONE')+'\\n#@END-LOGS@#')\n            }else if(text.includes('##BEGIN-PROCESS##')){\n                console.log('end messages');\n                const startP=text.indexOf('##BEGIN-PROCESS##')+'##BEGIN-PROCESS##'.length;\n                const endP=text.indexOf('##END-PROCESS##');\n                this.textRec=text.substring(startP,endP);\n                //disconnect();\n            }else if(text.includes('##BEGIN-SERVER-CONF##')){\n                const startE=text.indexOf('##BEGIN-SERVER-CONF##')+'##BEGIN-SERVER-CONF##'.length;\n                const endE=text.lastIndexOf('##END-SERVER-CONF##');\n                this.changeConfig(text.substring(startE,endE));\n                console.log('config');\n                if(!isPreDone()){\n                    console.log('disconnect in config');\n                    //disconnect();\n                    setPreDone();\n                }\n\n            }\n         };\n\n        this.connection.onopen = () => {\n            if(!isConnected()){\n                //this.changeLog('#@LOGS@#'+timeString('Connection with engine established')+'\\n#@END-LOGS@#');\n                setConnected();\n                console.log('opopen rec');\n            }\n        }\n\n        this.connection.onclose = () => {\n            if(isConnected()){\n                setConnected();\n                console.log('disconnect');\n            }\n         }\n\n         this.connection.onerror = () => {\n            if(isConnected){ \n                this.changeConfig('Configurazione non presente');\n                this.changeLog('#@LOGS@#'+timeString('Connection with engine crashed')+'\\n#@END-LOGS@#');\n                setConnected();\n            }\n         }\n         //vm.$on('receivedData',(v)=>{this.textR+=v;})\n    },\n    methods:{\n      changeConfig(textToChange){\n        if(textToChange.startsWith('{')){\n          var parseJSON = JSON.parse(textToChange);\n          var JSONInPrettyFormat = JSON.stringify(parseJSON, undefined, 4);\n          this.received.textConf=JSONInPrettyFormat;\n        }else{\n          this.received.textConf=textToChange;\n        }\n      },\n      changeErrLog(textToChange){\n        const startE=textToChange.indexOf('#@ERR-LOGS@#')+'#@ERR-LOGS@#'.length;\n        const endE=textToChange.lastIndexOf('#@END-ERR-LOGS@#');\n        this.received.textErrLog+= textToChange.substring(startE,endE);\n        alert(textToChange.substring(startE,endE));\n      },\n      changeLog(textToChange){\n        const startE=textToChange.indexOf('#@LOGS@#')+'#@LOGS@#'.length;\n        const endE=textToChange.lastIndexOf('#@END-LOGS@#');\n        this.received.textLog+= textToChange.substring(startE,endE);\n      },\n       sendBck(){\n            if(isPreDone()){\n                if(isConnected()){\n                        this.connection.send('##BACKTRACK##');\n                        sended=true;\n                }else{\n                    this.connection.close();\n                    this.connection=new WebSocket('ws://'+process.env.VUE_APP_ENGINE_SERVER);\n                    if(!sended){\n                      this.connection.onopen = () => {\n                        this.connection.send('##BACKTRACK##');\n                        sended=true;\n                      }\n                    }\n                }\n            }\n      },\n      sendMsg(textSend){\n            if(isPreDone() && textSend.length>0){\n                if(isConnected()){\n                    \n                        console.log('onopen send');\n                        console.log('Sending data');\n                        this.connection.send('##BEGIN-PROCESS##\\n'+textSend+'\\n##END-PROCESS##');\n                        sended=true;\n                    \n                }else{\n                    this.connection.close();\n                    this.connection=new WebSocket('ws://'+process.env.VUE_APP_ENGINE_SERVER);\n                    if(!sended){\n                      this.connection.onopen = () => {\n                        console.log('onopen send');\n                        console.log('Sending data');\n                        this.connection.send('##BEGIN-PROCESS##\\n'+textSend+'\\n##END-PROCESS##');\n                        sended=true;\n                      }\n                    }\n                }\n            }\n      }\n    }\n  }\n\n\n</script>\n"]}]}