{"remainingRequest":"C:\\Users\\stefa\\Desktop\\VueJS\\jcoui_web\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\stefa\\Desktop\\VueJS\\jcoui_web\\src\\components\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\stefa\\Desktop\\VueJS\\jcoui_web\\src\\components\\index.vue","mtime":1637332636806},{"path":"C:\\Users\\stefa\\Desktop\\VueJS\\jcoui_web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1634653954000},{"path":"C:\\Users\\stefa\\Desktop\\VueJS\\jcoui_web\\node_modules\\babel-loader\\lib\\index.js","mtime":1634653956000},{"path":"C:\\Users\\stefa\\Desktop\\VueJS\\jcoui_web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1634653954000},{"path":"C:\\Users\\stefa\\Desktop\\VueJS\\jcoui_web\\node_modules\\vue-loader\\lib\\index.js","mtime":1634653956000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsfile":"index.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div id=\"body\">\n    <center><h1 class=\"display-2 font-weight-bold mb-3\">\n            JCOUIweb \n     </h1></center>\n  <v-container>\n    <v-row class=\"text-center\">\n      <!--<v-col cols=\"12\">\n        <v-img\n          :src=\"require('../assets/logo.svg')\"\n          class=\"my-3\"\n          contain\n          height=\"100\"\n        />\n      </v-col> -->\n      \n      <v-col class=\"mb-4\">\n        \n        <bar-rec :recText=\"textRec\"></bar-rec>\n        <bar-send :disable=\"disBtn\" v-on:click-send=\"sendMsg($event)\"></bar-send>\n      </v-col>\n      <v-col>\n        <bottom-bar \n        v-on:click-ir-index=\"sendIRList()\" \n        v-on:click-tc-index=\"sendIRTempCol()\"\n        v-on:click-irc-index=\"sendIRSelCol($event)\" \n        v-on:click-back-index=\"sendBck()\"  \n        :bottomText=\"received\">\n        </bottom-bar>\n      </v-col>\n    </v-row>\n  </v-container>\n  \n  </div>\n</template>\n\n<script>\n\n//import Vue from 'vue'\nimport { timeString } from '../functions/functionTools';\nvar sended=false;\n\n\n//const vm = new Vue();\nvar connected=false;\nvar preDone=false;\n\nexport var connect = () => {\n  //vm.$connect();\n}\n\nexport var disconnect = () => {\n  //vm.$disconnect();\n  //vm.$destroy();\n}\n\nexport var setConnected = () => {\n  connected=!connected;\n}\n\nexport var isConnected = () => {\n  return connected;\n}\n\nexport var setPreDone = () => {\n  preDone=!preDone;\n}\n\nexport var isPreDone = () => {\n  return preDone;\n}\nimport BarRec from './barRec.vue'\nimport BarSend from './barSend.vue'\nimport BottomBar from './BottomBar.vue'\n  export default {\n    name: 'PaginaPrincipale',\n    \n    components : {\n      BarRec,\n      BarSend,\n      BottomBar\n    },\n      /*\nUSE DB movie ON SERVER mongo1;\nGET COLLECTION movie@movie; \nFILTER CASE WHERE WITH .name\t\nKEEP OTHERS; \nSAVE AS tempmovie@movie;\n\t    */\n    data() {\n      return {\n        connection : null,\n        textRec : '',\n        disBtn : false,\n        received: {\n          textConf : 'Configurazione non presente',\n          textLog : '',\n          textErrLog : '',\n          textIRTreeCol : '',\n          textIRCol : []\n        }\n      }\n    },\n    mounted(){\n      this.connection = new WebSocket('ws://'+process.env.VUE_APP_ENGINE_SERVER);\n        this.connection.onmessage = (message) => {\n            const text=message.data;\n            if(text.includes('##BEGIN-ERROR##')){\n                const startE=text.indexOf('##BEGIN-ERROR##')+'##BEGIN-ERROR##'.length;\n                const endE=text.lastIndexOf('##END-ERROR##');\n                this.changeLog('#@LOGS@#'+timeString('ERROR IN JOBS. SEE ERROR LOG BELOW')+'\\n#@END-LOGS@#');\n                this.changeErrLog('#@ERR-LOGS@#'+ timeString(text.substring(startE,endE))+'#@END-ERR-LOGS@#');\n            }else if(text.includes('##ACK##')){\n                console.log('ACK');\n                this.changeLog('#@LOGS@#'+timeString('BACKTRACK DONE')+'\\n#@END-LOGS@#')\n            }else if(text.includes('##BEGIN-COLLECTION##')){\n                const startE=text.indexOf('##BEGIN-COLLECTION##')+'##BEGIN-COLLECTION##'.length+1;\n                const endE=text.lastIndexOf('##END-COLLECTION##');\n                this.changeIRTree('#@TREE-DRAW@#'+ text.substring(startE,endE)+'#@END-TREE-DRAW@#');\n                this.changeLog('#@LOGS@#'+timeString('TREE DREW')+'\\n#@END-LOGS@#')\n            }else if(text.includes('##BEGIN-IR-LIST##')){\n                const startE=text.indexOf('##BEGIN-IR-LIST##')+'##BEGIN-IR-LIST##'.length;\n                const endE=text.lastIndexOf('##END-IR-LIST##');\n                this.changeIRList('#@IR-LIST@#'+ text.substring(startE,endE)+'#@END-IR-LIST@#');\n                this.changeLog('#@LOGS@#'+timeString('IR LIST ARRIVED')+'\\n#@END-LOGS@#')\n            }else if(text.includes('##SUCCESS##')){\n                console.log('successo');\n                this.changeLog('#@LOGS@#'+timeString('JOB DONE')+'\\n#@END-LOGS@#')\n            }else if(text.includes('##BEGIN-PROCESS##')){\n                console.log('end messages');\n                const startP=text.indexOf('##BEGIN-PROCESS##')+'##BEGIN-PROCESS##'.length+1;\n                const endP=text.indexOf('##END-PROCESS##');\n                this.textRec=text.substring(startP,endP);\n                this.disBtn=false;\n                //disconnect();\n            }else if(text.includes('##BEGIN-SERVER-CONF##')){\n                const startE=text.indexOf('##BEGIN-SERVER-CONF##')+'##BEGIN-SERVER-CONF##'.length+1;\n                const endE=text.lastIndexOf('##END-SERVER-CONF##');\n                this.changeConfig(text.substring(startE,endE));\n                console.log('config');\n                if(!isPreDone()){\n                    console.log('disconnect in config');\n                    //disconnect();\n                    setPreDone();\n                }\n\n            }\n         };\n\n        this.connection.onopen = () => {\n            if(!isConnected()){\n                //this.changeLog('#@LOGS@#'+timeString('Connection with engine established')+'\\n#@END-LOGS@#');\n                setConnected();\n                console.log('opopen rec');\n            }\n        }\n\n        this.connection.onclose = () => {\n            if(isConnected()){\n                setConnected();\n                console.log('disconnect');\n            }\n         }\n\n         this.connection.onerror = () => {\n            if(isConnected){ \n                this.changeConfig('Configurazione non presente');\n                this.changeLog('#@LOGS@#'+timeString('Connection with engine crashed')+'\\n#@END-LOGS@#');\n                setConnected();\n            }\n         }\n         //vm.$on('receivedData',(v)=>{this.textR+=v;})\n    },\n    methods:{\n      changeConfig(textToChange){\n        if(textToChange.startsWith('{')){\n          var parseJSON = JSON.parse(textToChange);\n          var JSONInPrettyFormat = JSON.stringify(parseJSON, undefined, 4);\n          this.received.textConf=JSONInPrettyFormat;\n        }else{\n          this.received.textConf=textToChange;\n        }\n      },\n      changeIRTree(textToChange){\n        if(textToChange.startsWith('{')){\n          var parseJSON = JSON.parse(textToChange);\n          var JSONInPrettyFormat = JSON.stringify(parseJSON, undefined, 4);\n          this.received.textIRTreeCol=JSONInPrettyFormat;\n        }else{\n          const startE=textToChange.indexOf('#@TREE-DRAW@#')+'#@TREE-DRAW@#'.length+'{ \"documents\" : '.length;\n          const endE=textToChange.lastIndexOf('#@END-TREE-DRAW@#')-3;\n          console.log(textToChange);\n          let textConv=textToChange.substring(startE,endE);\n          textConv=textConv.replace(/POINT /g,'{\\n\\t\\t\"type\" : \"POINT\",\\n\\t\\t\"coordinates\":\"').replaceAll(\")\",')\"\\n\\t}');\n          console.log(textConv);\n         // console.log('[\\n { \\n } , \\n'+textToChange.substring(startE,endE));\n          this.received.textIRTreeCol= JSON.parse(/*'[\\n { \\n } , \\n'+*/textConv);\n        }\n      },\n      changeIRList(textToChange){\n        if(textToChange.startsWith('{')){\n          var parseJSON = JSON.parse(textToChange);\n          var JSONInPrettyFormat = JSON.stringify(parseJSON, undefined, 4);\n          this.received.textIRCol=JSONInPrettyFormat;\n        }else{\n          this.received.textIRCol=[];\n          const startE=textToChange.indexOf('#@IR-LIST#')+'#@IR-LIST@#  '.length\n                                                         +'{ \t\"total\": 2, \t\"IRList\": '.length;\n          const endE=textToChange.lastIndexOf('#@END-IR-LIST@#')-2;\n          var textChanged=textToChange.substring(startE,endE)\n                                      /*.replace('\",\"','\\n')*/;\n          var json_data=JSON.parse(textChanged);\n          for(var i in json_data)\n            this.received.textIRCol.push(json_data [i]);\n        }\n      },\n      changeErrLog(textToChange){\n        const startE=textToChange.indexOf('#@ERR-LOGS@#')+'#@ERR-LOGS@#'.length;\n        const endE=textToChange.lastIndexOf('#@END-ERR-LOGS@#');\n        this.received.textLog+= textToChange.substring(startE,endE);\n        alert(textToChange.substring(startE,endE));\n      },\n      changeLog(textToChange){\n        const startE=textToChange.indexOf('#@LOGS@#')+'#@LOGS@#'.length;\n        const endE=textToChange.lastIndexOf('#@END-LOGS@#');\n        this.received.textLog+= textToChange.substring(startE,endE);\n      },\n       sendBck(){\n            if(isPreDone()){\n                if(isConnected()){\n                        this.connection.send('##BACKTRACK##');\n                        sended=true;\n                }else{\n                    this.connection.close();\n                    this.connection=new WebSocket('ws://'+process.env.VUE_APP_ENGINE_SERVER);\n                    if(!sended){\n                      this.connection.onopen = () => {\n                        this.connection.send('##BACKTRACK##');\n                        sended=true;\n                      }\n                    }\n                }\n            }\n      },\n      sendIRTempCol(){\n            if(isPreDone()){\n                if(isConnected()){\n                        this.connection.send('##GET-TEMPORARY-COLLECTION##');\n                        sended=true;\n                }else{\n                    this.connection.close();\n                    this.connection=new WebSocket('ws://'+process.env.VUE_APP_ENGINE_SERVER);\n                    if(!sended){\n                      this.connection.onopen = () => {\n                        this.connection.send('##GET-TEMPORARY-COLLECTION##');\n                        sended=true;\n                      }\n                    }\n                }\n            }\n      },\n      sendIRSelCol(selectedIndex){\n            if(isPreDone() && selectedIndex>-1){\n                if(isConnected()){\n                        this.connection.send('##GET-IR-COLLECTION##\\n'+this.received.textIRCol[selectedIndex]+\"\\n##END-IR-COLLECTION##\");\n                        sended=true;\n                }else{\n                    this.connection.close();\n                    this.connection=new WebSocket('ws://'+process.env.VUE_APP_ENGINE_SERVER);\n                    if(!sended){\n                      this.connection.onopen = () => {\n                        this.connection.send('##GET-IR-COLLECTION##\\n'+this.received.textIRCol[selectedIndex]+\"\\n##END-IR-COLLECTION##\");\n                        sended=true;\n                      }\n                    }\n                }\n            }\n      },\n      sendIRList(){\n            if(isPreDone()){\n                if(isConnected()){\n                        this.connection.send('##GET-IR-LIST##');\n                        sended=true;\n                }else{\n                    this.connection.close();\n                    this.connection=new WebSocket('ws://'+process.env.VUE_APP_ENGINE_SERVER);\n                    if(!sended){\n                      this.connection.onopen = () => {\n                        this.connection.send('##GET-IR-LIST##');\n                        sended=true;\n                      }\n                    }\n                }\n            }\n      },\n      sendMsg(textSend){\n            if(isPreDone() && textSend.length>0){\n\n                if(isConnected()){\n                    \n                        console.log('onopen send');\n                        console.log('Sending data');\n                        this.connection.send('##BEGIN-PROCESS##\\n'+textSend+'\\n##END-PROCESS##');\n                        sended=true;\n                    \n                }else{\n                    this.connection.close();\n                    this.connection=new WebSocket('ws://'+process.env.VUE_APP_ENGINE_SERVER);\n                    if(!sended){\n                      this.connection.onopen = () => {\n                        console.log('onopen send');\n                        console.log('Sending data');\n                        this.connection.send('##BEGIN-PROCESS##\\n'+textSend+'\\n##END-PROCESS##');\n                        sended=true;\n                      }\n                    }\n                }\n            }\n      }\n    }\n  }\n\n\n</script>\n"]}]}