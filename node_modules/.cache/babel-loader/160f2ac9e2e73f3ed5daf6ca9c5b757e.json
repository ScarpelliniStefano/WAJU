{"remainingRequest":"C:\\Users\\stefa\\Desktop\\VueJS\\jcoui_web\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\stefa\\Desktop\\VueJS\\jcoui_web\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\stefa\\Desktop\\VueJS\\jcoui_web\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\stefa\\Desktop\\VueJS\\jcoui_web\\src\\components\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\stefa\\Desktop\\VueJS\\jcoui_web\\src\\components\\index.vue","mtime":1637605082338},{"path":"C:\\Users\\stefa\\Desktop\\VueJS\\jcoui_web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1634653954000},{"path":"C:\\Users\\stefa\\Desktop\\VueJS\\jcoui_web\\node_modules\\babel-loader\\lib\\index.js","mtime":1634653956000},{"path":"C:\\Users\\stefa\\Desktop\\VueJS\\jcoui_web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1634653954000},{"path":"C:\\Users\\stefa\\Desktop\\VueJS\\jcoui_web\\node_modules\\vue-loader\\lib\\index.js","mtime":1634653956000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["index.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <div id=\"body\">\r\n    <div class=\"divheader\">\r\n        <p id=\"title\" class=\"display-2 font-weight-bold mb-3 mt-4\">JCOUIweb</p>\r\n        <v-icon align=\"left\" id=\"settings\" class=\"mt-1\" x-large color=\"white\">mdi-cog-outline</v-icon>\r\n    </div>\r\n      <v-container id=\"main-container\" class=\"divcontent grey lighten-5\" fluid>\r\n        <v-row class=\"text-center grow\" align=\"center\" justify=\"center\">\r\n          <v-col :key=\"1\" cols=\"12\" :sm=\"11\" :md=\"6\" :lg=\"4\" :xl=\"6\">\r\n              <bar-rec :recText=\"textRec\" v-on:click-back-index=\"sendBck()\"></bar-rec>\r\n          </v-col>\r\n          <v-col :key=\"2\" cols=\"12\" :sm=\"11\" :md=\"6\" :lg=\"4\" :xl=\"6\">\r\n              <bar-send :disable=\"disBtn\" v-on:click-send=\"sendMsg($event)\"></bar-send>\r\n          </v-col>\r\n          <v-col id=\"third\" :key=\"3\" cols=\"12\" :sm=\"11\" :md=\"12\" :lg=\"4\" :xl=\"12\">\r\n              <bottom-bar v-on:file-upload-index=\"sendConfigFile($event)\" \r\n                v-on:click-ir=\"sendIRList()\" \r\n                v-on:click-tc=\"sendIRTempCol()\"\r\n                v-on:click-irc=\"sendIRSelCol($event)\" \r\n                v-on:click-back-index=\"sendBck()\" \r\n                :bottomText=\"received\">\r\n              </bottom-bar>\r\n          </v-col>\r\n        </v-row>\r\n      </v-container>\r\n  \r\n  </div>\r\n</template>\r\n\r\n<style scoped>\r\n  #body{\r\n    display: flex;\r\n    flex-flow: column;\r\n    height: 100%;\r\n  }\r\n  #body .divheader{\r\n    flex: 0 1 auto;\r\n  }\r\n\r\n  #body .divcontent{\r\n    flex: 1 0 auto;\r\n  }\r\n  #third{\r\n    position: relative;\r\n  }\r\n</style>\r\n\r\n<script>\r\n\r\n//import Vue from 'vue'\r\nimport { timeString } from '../functions/functionTools';\r\nvar sended=false;\r\n\r\n//const vm = new Vue();\r\nvar connected=false;\r\nvar preDone=false;\r\n\r\nexport var connect = () => {\r\n  //vm.$connect();\r\n}\r\n\r\nexport var disconnect = () => {\r\n  //vm.$disconnect();\r\n  //vm.$destroy();\r\n}\r\n\r\nexport var setConnected = () => {\r\n  connected=!connected;\r\n}\r\n\r\nexport var isConnected = () => {\r\n  return connected;\r\n}\r\n\r\nexport var setPreDone = () => {\r\n  preDone=!preDone;\r\n}\r\n\r\nexport var isPreDone = () => {\r\n  return preDone;\r\n}\r\nimport BarRec from './barRec.vue'\r\nimport BarSend from './barSend.vue'\r\nimport BottomBar from './BottomBar.vue'\r\n  export default {\r\n    name: 'PaginaPrincipale',\r\n    \r\n    components : {\r\n      BarRec,\r\n      BarSend,\r\n      BottomBar\r\n    },\r\n      /*\r\nUSE DB movie ON SERVER mongo1;\r\nGET COLLECTION movie@movie; \r\nFILTER CASE WHERE WITH .name\t\r\nKEEP OTHERS; \r\nSAVE AS tempmovie@movie;\r\n\t    */\r\n    data() {\r\n      return {\r\n        connection : null,\r\n        textRec : '',\r\n        disBtn : false,\r\n        received: {\r\n          textConf : 'Configurazione non presente',\r\n          textLog : '',\r\n          textErrLog : '',\r\n          textIRTreeCol : '',\r\n          listIRCol : []\r\n        }\r\n      }\r\n    },\r\n    mounted(){\r\n      this.connection = new WebSocket('ws://'+process.env.VUE_APP_ENGINE_SERVER);\r\n        this.connection.onmessage = (message) => {\r\n            const text=message.data;\r\n            if(text.includes('##BEGIN-ERROR##')){\r\n                const startE=text.indexOf('##BEGIN-ERROR##')+'##BEGIN-ERROR##'.length;\r\n                const endE=text.lastIndexOf('##END-ERROR##');\r\n                this.changeLog('#@LOGS@#'+timeString('ERROR IN JOBS. SEE ERROR LOG BELOW')+'\\n#@END-LOGS@#');\r\n                this.changeErrLog('#@ERR-LOGS@#'+ timeString(text.substring(startE,endE))+'#@END-ERR-LOGS@#');\r\n            }else if(text.includes('##ACK##')){\r\n                console.log('ACK');\r\n                this.changeLog('#@LOGS@#'+timeString('BACKTRACK DONE')+'\\n#@END-LOGS@#')\r\n            }else if(text.includes('##BEGIN-COLLECTION##')){\r\n                const startE=text.indexOf('##BEGIN-COLLECTION##')+'##BEGIN-COLLECTION##'.length+1;\r\n                const endE=text.lastIndexOf('##END-COLLECTION##');\r\n                this.changeIRTree('#@TREE-DRAW@#'+ text.substring(startE,endE)+'#@END-TREE-DRAW@#');\r\n                this.changeLog('#@LOGS@#'+timeString('TREE DREW')+'\\n#@END-LOGS@#')\r\n            }else if(text.includes('##BEGIN-IR-LIST##')){\r\n                const startE=text.indexOf('##BEGIN-IR-LIST##')+'##BEGIN-IR-LIST##'.length;\r\n                const endE=text.lastIndexOf('##END-IR-LIST##');\r\n                this.changeIRList('#@IR-LIST@#'+ text.substring(startE,endE)+'#@END-IR-LIST@#');\r\n                this.changeLog('#@LOGS@#'+timeString('IR LIST ARRIVED')+'\\n#@END-LOGS@#')\r\n            }else if(text.includes('##SUCCESS##')){\r\n                console.log('successo');\r\n                this.changeLog('#@LOGS@#'+timeString('JOB DONE')+'\\n#@END-LOGS@#')\r\n            }else if(text.includes('##BEGIN-PROCESS##')){\r\n                console.log('end messages');\r\n                const startP=text.indexOf('##BEGIN-PROCESS##')+'##BEGIN-PROCESS##'.length+1;\r\n                const endP=text.indexOf('##END-PROCESS##');\r\n                this.textRec=text.substring(startP,endP);\r\n                this.disBtn=false;\r\n                //disconnect();\r\n            }else if(text.includes('##BEGIN-SERVER-CONF##')){\r\n                const startE=text.indexOf('##BEGIN-SERVER-CONF##')+'##BEGIN-SERVER-CONF##'.length+1;\r\n                const endE=text.lastIndexOf('##END-SERVER-CONF##');\r\n                this.changeConfig(text.substring(startE,endE));\r\n                console.log('config');\r\n                if(!isPreDone()){\r\n                    console.log('disconnect in config');\r\n                    //disconnect();\r\n                    setPreDone();\r\n                }\r\n\r\n            }\r\n         };\r\n\r\n        this.connection.onopen = () => {\r\n            if(!isConnected()){\r\n                //this.changeLog('#@LOGS@#'+timeString('Connection with engine established')+'\\n#@END-LOGS@#');\r\n                setConnected();\r\n                console.log('opopen rec');\r\n            }\r\n        }\r\n\r\n        this.connection.onclose = () => {\r\n            if(isConnected()){\r\n                setConnected();\r\n                console.log('disconnect');\r\n            }\r\n         }\r\n\r\n         this.connection.onerror = () => {\r\n            if(isConnected){ \r\n                this.changeConfig('Configurazione non presente');\r\n                this.changeLog('#@LOGS@#'+timeString('Connection with engine crashed')+'\\n#@END-LOGS@#');\r\n                setConnected();\r\n            }\r\n         }\r\n         //vm.$on('receivedData',(v)=>{this.textR+=v;})\r\n    },\r\n    methods:{\r\n      changeConfig(textToChange){\r\n        if(textToChange.startsWith('{')){\r\n          var parseJSON = JSON.parse(textToChange);\r\n          var JSONInPrettyFormat = JSON.stringify(parseJSON, undefined, 4);\r\n          this.received.textConf=JSONInPrettyFormat;\r\n        }else{\r\n          this.received.textConf=textToChange;\r\n        }\r\n      },\r\n      changeIRTree(textToChange){\r\n        if(textToChange.startsWith('{')){\r\n          var parseJSON = JSON.parse(textToChange);\r\n          var JSONInPrettyFormat = JSON.stringify(parseJSON, undefined, 4);\r\n          this.received.textIRTreeCol=JSONInPrettyFormat;\r\n        }else{\r\n          const startE=textToChange.indexOf('#@TREE-DRAW@#')+'#@TREE-DRAW@#'.length+'{ \"documents\" : '.length;\r\n          const endE=textToChange.lastIndexOf('#@END-TREE-DRAW@#')-3;\r\n          let textConv=textToChange.substring(startE,endE);\r\n          textConv=textConv.replace(/POINT /g,'{\\n\\t\\t\"type\" : \"POINT\",\\n\\t\\t\"coordinates\":\"').replaceAll(\")\",')\"\\n\\t}');\r\n         // console.log('[\\n { \\n } , \\n'+textToChange.substring(startE,endE));\r\n          this.received.textIRTreeCol= JSON.parse(/*'[\\n { \\n } , \\n'+*/textConv);\r\n        }\r\n      },\r\n      changeIRList(textToChange){\r\n        if(textToChange.startsWith('{')){\r\n          var parseJSON = JSON.parse(textToChange);\r\n          var JSONInPrettyFormat = JSON.stringify(parseJSON, undefined, 4);\r\n          this.received.listIRCol=JSONInPrettyFormat;\r\n        }else{\r\n          this.received.textIRCol=[];\r\n          const startE=textToChange.indexOf('#@IR-LIST#')+'#@IR-LIST@#  '.length;                          \r\n          const endE=textToChange.lastIndexOf('#@END-IR-LIST@#')-1;\r\n         \r\n          var textChanged=textToChange.substring(startE,endE)\r\n                                      /*.replace('\",\"','\\n')*/;\r\n          var json_data=JSON.parse(textChanged);\r\n          json_data=json_data.IRList;\r\n          for(var i in json_data)\r\n            this.received.listIRCol.push(json_data[i]);\r\n        }\r\n      },\r\n      changeErrLog(textToChange){\r\n        const startE=textToChange.indexOf('#@ERR-LOGS@#')+'#@ERR-LOGS@#'.length;\r\n        const endE=textToChange.lastIndexOf('#@END-ERR-LOGS@#');\r\n        this.received.textLog+= textToChange.substring(startE,endE);\r\n        alert(textToChange.substring(startE,endE));\r\n      },\r\n      changeLog(textToChange){\r\n        const startE=textToChange.indexOf('#@LOGS@#')+'#@LOGS@#'.length;\r\n        const endE=textToChange.lastIndexOf('#@END-LOGS@#');\r\n        this.received.textLog+= textToChange.substring(startE,endE);\r\n      },\r\n      sendConfigFile(textSend){\r\n        if(isPreDone() && textSend.length>0){\r\n          if(isConnected()){\r\n            console.log('onopen send');\r\n            console.log('Sending data');\r\n            this.connection.send('##ADD-SERVER-CONF##\\n'+textSend+'\\n##ADD-SERVER-CONF##');\r\n            sended=true;\r\n          }else{\r\n            this.connection.close();\r\n            this.connection=new WebSocket('ws://'+process.env.VUE_APP_ENGINE_SERVER);\r\n            if(!sended){\r\n              this.connection.onopen = () => {\r\n                console.log('onopen send');\r\n                console.log('Sending data');\r\n                this.connection.send('##ADD-SERVER-CONF##\\n'+textSend+'\\n##ADD-SERVER-CONF##');\r\n                sended=true;\r\n              }\r\n            }\r\n          }\r\n        }\r\n      },\r\n      sendBck(){\r\n        if(isPreDone()){\r\n          if(isConnected()){\r\n            this.connection.send('##BACKTRACK##');\r\n            sended=true;\r\n          }else{\r\n            this.connection.close();\r\n            this.connection=new WebSocket('ws://'+process.env.VUE_APP_ENGINE_SERVER);\r\n            if(!sended){\r\n              this.connection.onopen = () => {\r\n                this.connection.send('##BACKTRACK##');\r\n                sended=true;\r\n              }\r\n            }\r\n          }\r\n        }\r\n      },\r\n      sendIRTempCol(){\r\n            if(isPreDone()){\r\n                if(isConnected()){\r\n                        this.connection.send('##GET-TEMPORARY-COLLECTION##');\r\n                        sended=true;\r\n                }else{\r\n                    this.connection.close();\r\n                    this.connection=new WebSocket('ws://'+process.env.VUE_APP_ENGINE_SERVER);\r\n                    if(!sended){\r\n                      this.connection.onopen = () => {\r\n                        this.connection.send('##GET-TEMPORARY-COLLECTION##');\r\n                        sended=true;\r\n                      }\r\n                    }\r\n                }\r\n            }\r\n      },\r\n      sendIRSelCol(selectedItem){\r\n            if(isPreDone() && selectedItem!==\"\"){\r\n                if(isConnected()){\r\n                        this.connection.send('##GET-IR-COLLECTION##\\n'+selectedItem+\"\\n##END-IR-COLLECTION##\");\r\n                        sended=true;\r\n                }else{\r\n                    this.connection.close();\r\n                    this.connection=new WebSocket('ws://'+process.env.VUE_APP_ENGINE_SERVER);\r\n                    if(!sended){\r\n                      this.connection.onopen = () => {\r\n                        this.connection.send('##GET-IR-COLLECTION##\\n'+selectedItem+\"\\n##END-IR-COLLECTION##\");\r\n                        sended=true;\r\n                      }\r\n                    }\r\n                }\r\n            }\r\n      },\r\n      sendIRList(){\r\n            if(isPreDone()){\r\n                if(isConnected()){\r\n                        this.connection.send('##GET-IR-LIST##');\r\n                        sended=true;\r\n                }else{\r\n                    this.connection.close();\r\n                    this.connection=new WebSocket('ws://'+process.env.VUE_APP_ENGINE_SERVER);\r\n                    if(!sended){\r\n                      this.connection.onopen = () => {\r\n                        this.connection.send('##GET-IR-LIST##');\r\n                        sended=true;\r\n                      }\r\n                    }\r\n                }\r\n            }\r\n      },\r\n      sendMsg(textSend){\r\n            if(isPreDone() && textSend.length>0){\r\n                if(isConnected()){\r\n                    \r\n                        console.log('onopen send');\r\n                        console.log('Sending data');\r\n                        this.connection.send('##BEGIN-PROCESS##\\n'+textSend+'\\n##END-PROCESS##');\r\n                        sended=true;\r\n                    \r\n                }else{\r\n                    this.connection.close();\r\n                    this.connection=new WebSocket('ws://'+process.env.VUE_APP_ENGINE_SERVER);\r\n                    if(!sended){\r\n                      this.connection.onopen = () => {\r\n                        console.log('onopen send');\r\n                        console.log('Sending data');\r\n                        this.connection.send('##BEGIN-PROCESS##\\n'+textSend+'\\n##END-PROCESS##');\r\n                        sended=true;\r\n                      }\r\n                    }\r\n                }\r\n            }\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n</script>\r\n\r\n<style scoped>\r\n  #title{\r\n    display: inline-block;\r\n    vertical-align: middle;\r\n    margin-left: 8px;\r\n    color: white;\r\n  }\r\n  #settings{\r\n    text-align: right;\r\n  }\r\n  #body{\r\n    background-color: navy;\r\n  }\r\n\r\n</style>"],"sourceRoot":"src/components"}]}