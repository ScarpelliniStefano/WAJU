{"remainingRequest":"C:\\Users\\stefa\\Desktop\\VueJS\\jcoui_web\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\stefa\\Desktop\\VueJS\\jcoui_web\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\stefa\\Desktop\\VueJS\\jcoui_web\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\stefa\\Desktop\\VueJS\\jcoui_web\\src\\components\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\stefa\\Desktop\\VueJS\\jcoui_web\\src\\components\\index.vue","mtime":1637244371729},{"path":"C:\\Users\\stefa\\Desktop\\VueJS\\jcoui_web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1634653954000},{"path":"C:\\Users\\stefa\\Desktop\\VueJS\\jcoui_web\\node_modules\\babel-loader\\lib\\index.js","mtime":1634653956000},{"path":"C:\\Users\\stefa\\Desktop\\VueJS\\jcoui_web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1634653954000},{"path":"C:\\Users\\stefa\\Desktop\\VueJS\\jcoui_web\\node_modules\\vue-loader\\lib\\index.js","mtime":1634653956000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["index.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div id=\"body\">\n    <center><h1 class=\"display-2 font-weight-bold mb-3\">\n            JCOUIweb \n     </h1></center>\n  <v-container>\n    <v-row class=\"text-center\">\n      <!--<v-col cols=\"12\">\n        <v-img\n          :src=\"require('../assets/logo.svg')\"\n          class=\"my-3\"\n          contain\n          height=\"100\"\n        />\n      </v-col> -->\n      \n      <v-col class=\"mb-4\">\n        \n        <bar-rec :recText=\"textRec\"></bar-rec>\n        <bar-send :disable=\"disBtn\" v-on:click-send=\"sendMsg($event)\"></bar-send>\n      </v-col>\n      <v-col>\n        <bottom-bar \n        v-on:click-ir-index=\"sendIRList()\" \n        v-on:click-tc-index=\"sendIRTempCol()\"\n        v-on:click-irc-index=\"sendIRSelCol($event)\" \n        v-on:click-back-index=\"sendBck()\"  \n        :bottomText=\"received\">\n        </bottom-bar>\n      </v-col>\n    </v-row>\n  </v-container>\n  \n  </div>\n</template>\n\n<script>\n\n//import Vue from 'vue'\nimport { timeString } from '../functions/functionTools';\nvar sended=false;\n\n\n//const vm = new Vue();\nvar connected=false;\nvar preDone=false;\n\nexport var connect = () => {\n  //vm.$connect();\n}\n\nexport var disconnect = () => {\n  //vm.$disconnect();\n  //vm.$destroy();\n}\n\nexport var setConnected = () => {\n  connected=!connected;\n}\n\nexport var isConnected = () => {\n  return connected;\n}\n\nexport var setPreDone = () => {\n  preDone=!preDone;\n}\n\nexport var isPreDone = () => {\n  return preDone;\n}\nimport BarRec from './barRec.vue'\nimport BarSend from './barSend.vue'\nimport BottomBar from './BottomBar.vue'\n  export default {\n    name: 'PaginaPrincipale',\n    \n    components : {\n      BarRec,\n      BarSend,\n      BottomBar\n    },\n      /*\nUSE DB movie ON SERVER mongo1;\nGET COLLECTION movie@movie; \nFILTER CASE WHERE WITH .name\t\nKEEP OTHERS; \nSAVE AS tempmovie@movie;\n\t    */\n    data() {\n      return {\n        connection : null,\n        textRec : '',\n        disBtn : false,\n        received: {\n          textConf : 'Configurazione non presente',\n          textLog : '',\n          textErrLog : '',\n          textIRTreeCol : '',\n          textIRCol : []\n        }\n      }\n    },\n    mounted(){\n      this.connection = new WebSocket('ws://'+process.env.VUE_APP_ENGINE_SERVER);\n        this.connection.onmessage = (message) => {\n            const text=message.data;\n            if(text.includes('##BEGIN-ERROR##')){\n                const startE=text.indexOf('##BEGIN-ERROR##')+'##BEGIN-ERROR##'.length;\n                const endE=text.lastIndexOf('##END-ERROR##');\n                this.changeErrLog('#@ERR-LOGS@#'+ timeString(text.substring(startE,endE))+'#@END-ERR-LOGS@#');\n                this.changeLog('#@LOGS@#'+timeString('ERROR IN JOBS. SEE ERROR LOG')+'\\n#@END-LOGS@#')\n            }else if(text.includes('##BEGIN-COLLECTION##')){\n                const startE=text.indexOf('##BEGIN-COLLECTION##')+'##BEGIN-COLLECTION##'.length;\n                const endE=text.lastIndexOf('##END-COLLECTION##');\n                this.changeIRTree('#@TREE-DRAW@#'+ text.substring(startE,endE)+'#@END-TREE-DRAW@#');\n                this.changeLog('#@LOGS@#'+timeString('TREE DREW')+'\\n#@END-LOGS@#')\n            }else if(text.includes('##BEGIN-IR-LIST##')){\n                const startE=text.indexOf('##BEGIN-IR-LIST##')+'##BEGIN-IR-LIST##'.length;\n                const endE=text.lastIndexOf('##END-IR-LIST##');\n                this.changeIRList('#@IR-LIST@#'+ text.substring(startE,endE)+'#@END-IR-LIST@#');\n                this.changeLog('#@LOGS@#'+timeString('IR LIST ARRIVED')+'\\n#@END-LOGS@#')\n            }else if(text.includes('##SUCCESS##')){\n                console.log('successo');\n                this.changeLog('#@LOGS@#'+timeString('JOB DONE')+'\\n#@END-LOGS@#')\n            }else if(text.includes('##BEGIN-PROCESS##')){\n                console.log('end messages');\n                const startP=text.indexOf('##BEGIN-PROCESS##')+'##BEGIN-PROCESS##'.length+1;\n                const endP=text.indexOf('##END-PROCESS##');\n                this.textRec=text.substring(startP,endP);\n                this.disBtn=false;\n                //disconnect();\n            }else if(text.includes('##BEGIN-SERVER-CONF##')){\n                const startE=text.indexOf('##BEGIN-SERVER-CONF##')+'##BEGIN-SERVER-CONF##'.length;\n                const endE=text.lastIndexOf('##END-SERVER-CONF##');\n                this.changeConfig(text.substring(startE,endE));\n                console.log('config');\n                if(!isPreDone()){\n                    console.log('disconnect in config');\n                    //disconnect();\n                    setPreDone();\n                }\n\n            }\n         };\n\n        this.connection.onopen = () => {\n            if(!isConnected()){\n                //this.changeLog('#@LOGS@#'+timeString('Connection with engine established')+'\\n#@END-LOGS@#');\n                setConnected();\n                console.log('opopen rec');\n            }\n        }\n\n        this.connection.onclose = () => {\n            if(isConnected()){\n                setConnected();\n                console.log('disconnect');\n            }\n         }\n\n         this.connection.onerror = () => {\n            if(isConnected){ \n                this.changeConfig('Configurazione non presente');\n                this.changeLog('#@LOGS@#'+timeString('Connection with engine crashed')+'\\n#@END-LOGS@#');\n                setConnected();\n            }\n         }\n         //vm.$on('receivedData',(v)=>{this.textR+=v;})\n    },\n    methods:{\n      changeConfig(textToChange){\n        if(textToChange.startsWith('{')){\n          var parseJSON = JSON.parse(textToChange);\n          var JSONInPrettyFormat = JSON.stringify(parseJSON, undefined, 4);\n          this.received.textConf=JSONInPrettyFormat;\n        }else{\n          this.received.textConf=textToChange;\n        }\n      },\n      changeIRTree(textToChange){\n        if(textToChange.startsWith('{')){\n          var parseJSON = JSON.parse(textToChange);\n          var JSONInPrettyFormat = JSON.stringify(parseJSON, undefined, 4);\n          this.received.textIRTreeCol=JSONInPrettyFormat;\n        }else{\n          const startE=textToChange.indexOf('#@TREE-DRAW@#')+'#@TREE-DRAW@#'.length+'\"documents\" : [{'.length;\n          const endE=textToChange.lastIndexOf('#@END-TREE-DRAW@#')-3;\n          console.log(textToChange.substring(startE,endE));\n          this.received.textIRTreeCol= JSON.parse(textToChange.substring(startE,endE));\n        }\n      },\n      changeIRList(textToChange){\n        if(textToChange.startsWith('{')){\n          var parseJSON = JSON.parse(textToChange);\n          var JSONInPrettyFormat = JSON.stringify(parseJSON, undefined, 4);\n          this.received.textIRCol=JSONInPrettyFormat;\n        }else{\n          this.received.textIRCol=[];\n          const startE=textToChange.indexOf('#@IR-LIST#')+'#@IR-LIST@#  '.length\n                                                         +'{ \t\"total\": 2, \t\"IRList\": '.length;\n          const endE=textToChange.lastIndexOf('#@END-IR-LIST@#')-2;\n          var textChanged=textToChange.substring(startE,endE)\n                                      /*.replace('\",\"','\\n')*/;\n          var json_data=JSON.parse(textChanged);\n          console.log(textChanged);\n          for(var i in json_data)\n            this.received.textIRCol.push(json_data [i]);\n        }\n      },\n      changeErrLog(textToChange){\n        const startE=textToChange.indexOf('#@ERR-LOGS@#')+'#@ERR-LOGS@#'.length;\n        const endE=textToChange.lastIndexOf('#@END-ERR-LOGS@#');\n        this.received.textErrLog+= textToChange.substring(startE,endE);\n        alert(textToChange.substring(startE,endE));\n      },\n      changeLog(textToChange){\n        const startE=textToChange.indexOf('#@LOGS@#')+'#@LOGS@#'.length;\n        const endE=textToChange.lastIndexOf('#@END-LOGS@#');\n        this.received.textLog+= textToChange.substring(startE,endE);\n      },\n       sendBck(){\n            if(isPreDone()){\n                if(isConnected()){\n                        this.connection.send('##BACKTRACK##');\n                        sended=true;\n                }else{\n                    this.connection.close();\n                    this.connection=new WebSocket('ws://'+process.env.VUE_APP_ENGINE_SERVER);\n                    if(!sended){\n                      this.connection.onopen = () => {\n                        this.connection.send('##BACKTRACK##');\n                        sended=true;\n                      }\n                    }\n                }\n            }\n      },\n      sendIRTempCol(){\n            if(isPreDone()){\n                if(isConnected()){\n                        this.connection.send('##GET-TEMPORARY-COLLECTION##');\n                        sended=true;\n                }else{\n                    this.connection.close();\n                    this.connection=new WebSocket('ws://'+process.env.VUE_APP_ENGINE_SERVER);\n                    if(!sended){\n                      this.connection.onopen = () => {\n                        this.connection.send('##GET-TEMPORARY-COLLECTION##');\n                        sended=true;\n                      }\n                    }\n                }\n            }\n      },\n      sendIRSelCol(selectedIndex){\n            if(isPreDone() && selectedIndex>-1){\n                if(isConnected()){\n                        this.connection.send('##GET-IR-COLLECTION##\\n'+this.received.textIRCol[selectedIndex]+\"\\n##END-IR-COLLECTION##\");\n                        sended=true;\n                }else{\n                    this.connection.close();\n                    this.connection=new WebSocket('ws://'+process.env.VUE_APP_ENGINE_SERVER);\n                    if(!sended){\n                      this.connection.onopen = () => {\n                        this.connection.send('##GET-IR-COLLECTION##\\n'+this.received.textIRCol[selectedIndex]+\"\\n##END-IR-COLLECTION##\");\n                        sended=true;\n                      }\n                    }\n                }\n            }\n      },\n      sendIRList(){\n            if(isPreDone()){\n                if(isConnected()){\n                        this.connection.send('##GET-IR-LIST##');\n                        sended=true;\n                }else{\n                    this.connection.close();\n                    this.connection=new WebSocket('ws://'+process.env.VUE_APP_ENGINE_SERVER);\n                    if(!sended){\n                      this.connection.onopen = () => {\n                        this.connection.send('##GET-IR-LIST##');\n                        sended=true;\n                      }\n                    }\n                }\n            }\n      },\n      sendMsg(textSend){\n            if(isPreDone() && textSend.length>0){\n\n                if(isConnected()){\n                    \n                        console.log('onopen send');\n                        console.log('Sending data');\n                        this.connection.send('##BEGIN-PROCESS##\\n'+textSend+'\\n##END-PROCESS##');\n                        sended=true;\n                    \n                }else{\n                    this.connection.close();\n                    this.connection=new WebSocket('ws://'+process.env.VUE_APP_ENGINE_SERVER);\n                    if(!sended){\n                      this.connection.onopen = () => {\n                        console.log('onopen send');\n                        console.log('Sending data');\n                        this.connection.send('##BEGIN-PROCESS##\\n'+textSend+'\\n##END-PROCESS##');\n                        sended=true;\n                      }\n                    }\n                }\n            }\n      }\n    }\n  }\n\n\n</script>\n"],"sourceRoot":"src/components"}]}